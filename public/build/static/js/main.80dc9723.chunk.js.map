{"version":3,"sources":["theme/index.js","reducers/DataReducer.js","rootreducer.js","Store.js","client/environment.js","client/index.jsx","components/Input.js","components/nav.js","components/spectrum/auxi.js","components/spectrum/interactiveObject.js","components/spectrum/plant.js","components/spectrum/handle.js","components/spectrum/light.js","components/spectrum/mirror.js","components/spectrum/index.js","components/sensorTypes.js","components/plants.js","components/countdown.js","components/controller.js","components/score.js","components/game.js","services/Buildertheme.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["Theme","this","colors","primary","secondary","tertiary","text","defaultWrapWidth","font","sizes","normal","title","subtitle","medias","em","xs","sm","md","lg","px","query","onlySmall","largerthansm","mdandup","smallerthanmd","padding","styled","pre","values","post","children","EmptyDiv","content","defaultWrap","responsive","EmptySpan","defaultFont","div","Title","props","border","span","ACTIONS","Object","freeze","SET_CLIENT","Symbol","SET_NAV_OPEN","SET_THEME","SET_THEMES","SET_NEWS","SET_EVENTS","SET_FAQS","SET_SENSOR_TYPES","SET_PLANT_CLUSTERS","SET_SOCKET","SET_GAME_SETTINGS","initialState","client","navopen","window","innerWidth","theme","themes","news","events","faqs","sensorTypes","plantClusters","socket","gameSettings","rootReducer","combineReducers","data","state","action","type","console","log","middleware","applyMiddleware","thunkMiddleware","Store","createStore","envi","dev","location","hostname","status","document","printstatus","dispatch","settings","io","transports","DATA_ACTIONS","on","Input","Nav","useSelector","center","to","src","Logo","style","width","Text","color","fontSize","fontWeight","Container","getPointOnCircle","p5","centrum","offset","division","section","angle","Math","PI","pos","createVector","cos","sin","mult","add","sqr","x","dist2","v","w","y","distToSegment","p","sqrt","l2","t","max","min","distToSegmentSquared","IO_STATE","UNSELECTED","CLICKED","HOVERING","DRAGGED","InteractiveObject","size","ID","loc","dist","isOver","mouseX","mouseY","isCurrentOver","mouseMoved","Plant","alternativeColor","collisionColor","colorplaceholder","lights","col","light","j","beam","segments","length","segment","line_v","p1_x","p1_y","line_w","p2_x","p2_y","point","noStroke","fill","millis","circle","Handle","circleSize","direction","strokeWeight","mousePos","mouseV","diff","set","sub","normalize","handlePosition","rotate","noFill","stroke","handleOffset","setMag","Segment","mirror","Beam","origin","mirrors","intersectPoints","startPoint","cnt","pow","height","reflectionData","reflect","push","reflectionStart","cast","beamStart","beamEnd","intersectionPoints","i","mirrorStart","getPoints","mirrorEnd","u","distance","id","reflectionNormal","getReflection","intersectionPoint","sort","a","b","normDirection","reflectVector","line","Light","controlOffset","randDirection","random","handle","getDirection","draw","mousePressed","mouseReleased","mouseDragged","Mirror","player","rotation","reflectionNormals","adjustV","adjust","endPoint","linePoints","scoreUpdate","mirrorsPerPlayer","safeDistance","Map","plants","toDraw","toInteract","lightSettings","plantSettings","amount","mirrorSettings","getCenter","setup","canvasParentRef","offsetWidth","createCanvas","screen","parent","gameUpdate","forEach","arr","m","get","background","td","mr","detectCollision","frameCount","emit","score","ti","SensorType","name","description","useState","open","setOpen","className","onClick","SensorTypes","map","st","key","Sensor","value","useEffect","sensors","s","Plants","setPlantClusters","Countdown","target","displaytext","endText","rt","setrt","count","setCount","int","setInterval","floor","abs","Date","getTime","clearInterval","Controller","phase","phases","RUNNING","Score","Game","useFullScreenHandle","start","setStart","PHASES","LOAD","END","setPhase","players","setPlayers","setPlayer","setTarget","listeners","setListeners","setTargetFromDate","seconds","d","setSeconds","getSeconds","newphase","beginningTime","duration","newplayers","off","MakePlayer","killed","toUpperCase","selected","textAlign","enter","Empty","margin","borderLeft","BuilderTheme","Home","newsref","useRef","getEvents","available","moment","SubTitle","format","blocks","align","Wrapped","ref","images","image","alt","filter","e","today","yesterday","setDate","getDate","DataHelper","useDispatch","cli","sanityclient","App","history","createBrowserHistory","store","minWidth","exact","path","component","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.80dc9723.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport \"./theme.css\"\nimport Overview from './pages/overview'\nexport {Grid, Col, Row } from 'react-styled-flexboxgrid';\n/* \n    - TOAST\n    - support multiple themes\n    - set basic html (background etc)\n    - build in version control\n    - Text\n    - Title\n    - Subtitle\n    - Container\n    - CollapsibleContainer\n    - Button\n*/\n\nexport const OverviewPage = Overview;\n\nlet settings = {\n    \n};\n\nclass Theme {\n    constructor() {\n        this.colors = {\n          primary: \"black\",\n          secondary: \"white\",\n          tertiary: \"red\"\n        };\n\n        this.colors.text = {\n            primary: this.colors.secondary,\n            secondary: this.colors.primary\n        }\n\n        this.defaultWrapWidth = 3;\n\n        this.font = \"American Typewriter\"\n\n        this.sizes = {\n            normal: \"1.2em\",\n            title: \"2em\",\n            subtitle: \"1.4em\"\n        }\n\n        this.medias = {\n          em: {\n            xs: 0,  \n            sm: 48, \n            md: 64, \n            lg: 75\n          }, \n          px: {\n            xs: 0,  \n            sm: 768, \n            md: 1024, \n            lg: 5625\n          }\n        }\n\n        this.medias.query = {\n            onlySmall : `(max-width: ${this.medias.px.sm}px)`,\n            largerthansm : `(min-width: ${this.medias.px.sm+1}px)`,\n            mdandup : `(min-width: ${this.medias.px.md}px)`,\n            smallerthanmd : `(max-width: ${this.medias.px.md-1}px)`\n        }\n\n        this.padding = {\n            xs: 10,  \n            sm: 15, \n            md: 20, \n            lg: 30\n        };\n    }\n    \n    /**\n     * HELPERS\n     */\n    get defaultWrap(){\n        return `solid ${this.colors.primary} ${this.defaultWrapWidth}px`\n    }\n\n    get defaultFont(){\n        return `font-family : ${this.font}; font-size: ${this.sizes.normal};`\n    }\n\n    get styled(){\n        return styled;\n    }\n\n    responsive(pre, values, post){\n        return `\n            ${pre}: ${values.xs}${post};\n\n            @media only screen and (min-width: ${this.medias.px.sm}px) {\n                ${pre}: ${values.sm}${post};\n            }\n\n            @media only screen and (min-width: ${this.medias.px.md}px) {\n                ${pre}: ${values.md}${post};\n            }        \n\n            @media only screen and (min-width: ${this.medias.px.lg}px) {\n                ${pre}: ${values.lg}${post};\n            }        \n        `\n    }\n    \n    /**\n     * COMPONENTS\n     */\n    /**\n     * wrapping\n     */\n    get Wrapped(){\n        return ({children})=><EmptyDiv content={`border : ${this.defaultWrap}; background: white;`}>{children}</EmptyDiv>\n    }\n\n    get Container(){\n        return ({children})=><EmptyDiv content={this.responsive(\"padding\", this.padding, 'px')}>{children}</EmptyDiv>\n    }\n\n    get Empty(){\n        return ({children})=><EmptyDiv >{children}</EmptyDiv>\n    }\n\n    get Text(){\n        return ({children})=><EmptySpan content={this.defaultFont}>{children}</EmptySpan>\n    }\n\n    // get Container(){\n    //     return styled.div`\n    //         padding: ${this.padding}\n    //     `\n    // } \n\n    // test\n\n    // /**\n    //  * typography\n    //  */\n    // get Text(){\n    //     return styled.p`\n    //         ${this.defaultFont}\n    //     `\n    // }\n\n    get Title(){\n        // return ({children})=><EmptySpan content={this.defaultFont}>{children}</EmptySpan>\n        return styled.div`\n            ${this.defaultFont}\n            font-size: ${this.sizes.title}; \n            font-weight: bold;\n        `\n    }\n\n    get SubTitle(){\n        return styled(this.Title)`\n            font-size: ${this.sizes.subtitle}; \n        `\n    }\n\n    // /**\n    //  * grid\n    //  */\n    // get Grid(){\n    //     return styled(Grid_)`\n    //         margin: 0px;\n    //         padding: 0px;\n    //         width: 100%;\n    //     `\n    // }\n\n    // get Row(){return Row_};\n    // get Col(){return Col_};\n}\n\nconst Wrapped = styled.div`\n    border: ${props=>props.border}\n`\n\nconst EmptyDiv = styled.div`\n    ${props=>props.content}\n    \n`\n\nconst EmptySpan = styled.span`\n    ${props=>props.content}\n`\n\n\nexport default Theme;","export const ACTIONS = Object.freeze({\n    SET_CLIENT: Symbol(\"data/client\"),\n    SET_NAV_OPEN: Symbol('data/navopen'),\n    SET_THEME: Symbol('data/theme'),\n    SET_THEMES: Symbol('data/themes'),\n    SET_NEWS: Symbol('data/news'),\n    SET_EVENTS: Symbol('data/cal'),\n    SET_FAQS: Symbol('data/faq'),\n    SET_SENSOR_TYPES: Symbol('data/svt'),\n    SET_PLANT_CLUSTERS: Symbol('data/pc'),\n    SET_SOCKET: Symbol('socket'),\n    SET_GAME_SETTINGS: Symbol('gamesettings')\n});\n\nconst initialState = {\n  client: null,\n  navopen: window.innerWidth > 768,\n  theme: null,\n  themes: null,\n  news: null,\n  events: null,\n  faqs: null,\n  sensorTypes: null,\n  plantClusters: null,\n  socket: null,\n  gameSettings: null\n};\n\nexport default (state = initialState, action) => {\n  \n  switch (action.type) {\n    case ACTIONS.SET_CLIENT: {\n      return {\n        ...state,\n        client: action.client\n      };\n    }\n    case ACTIONS.SET_SENSOR_TYPES: {\n      return {\n        ...state,\n        sensorTypes: action.sensorTypes\n      };\n    }\n    case ACTIONS.SET_GAME_SETTINGS: {\n      return {\n        ...state,\n        gameSettings: action.gameSettings\n      };\n    }\n    case ACTIONS.SET_SOCKET: {\n      console.log(action.socket)\n\n      return {\n        ...state,\n        socket: action.socket\n      };\n    }\n    case ACTIONS.SET_PLANT_CLUSTERS: {\n      return {\n        ...state,\n        plantClusters: action.plantClusters\n      };\n    }\n    case ACTIONS.SET_NEWS: {\n      return {\n        ...state,\n        news: action.news\n      };\n    }\n    case ACTIONS.SET_EVENTS: {\n      return {\n        ...state,\n        events: action.events\n      };\n    }\n    case ACTIONS.SET_NAV_OPEN: {\n      return {\n        ...state,\n        navopen: action.navopen\n      };\n    }\n    case ACTIONS.SET_THEME: {\n      return {\n        ...state,\n        theme: action.theme\n      };\n    }\n    case ACTIONS.SET_THEMES: {\n      return {\n        ...state,\n        themes: action.themes\n      };\n    }\n    default: {\n      return {\n        ...state\n      };\n    }\n  } \n};\n","import { combineReducers } from \"redux\";\nimport data from './reducers/DataReducer';\n\nconst rootReducer = combineReducers({\n  data\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport thunkMiddleware from \"redux-thunk\";\n\nimport rootReducer from \"./rootreducer\";\n\nconst middleware = applyMiddleware(thunkMiddleware);\n\nconst Store = createStore(rootReducer, middleware);\n\nexport default Store;\n","export const envi = ()=>{\n    const dev = (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\");\n    const status = (()=>{return `Running ${dev?'local':'server'}`})()\n    const printstatus = ()=>{\n        console.log(status);\n    }\n\n    if (dev){\n        document.title = \" (local) \" + document.title;\n    }\n    \n    return {\n        dev,\n        status,\n        printstatus\n    }   \n}\n\nexport default envi","import sanityClient from '@sanity/client'\nimport envi from './environment'\nimport {settings} from './connector_settings.json'\nimport { ACTIONS as DATA_ACTIONS } from \"../reducers/DataReducer\"\n// import toast from '../services/toast'\nimport imageUrlBuilder from '@sanity/image-url'\nimport { io } from \"socket.io-client\";\n\nconst prevFetched = {};\n\nexport const client = (dispatch, socket)=>{\n    const environment = envi();\n    let _ = settings;\n    let news = [];\n    // const sc = sanityClient({\n    //     projectId: _.projectId,\n    //     dataset: _.dataset,\n    //     token: _.token, // or leave blank to be anonymous user\n    //     ignoreBrowserTokenWarning: true,\n    //     useCdn: false\n    // })\n\n    // kick it\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\"){\n        socket = io(\"http://localhost:2200/\", { transports: [\"websocket\"] });\n    } else {\n        socket= io();\n    }\n    dispatch({type: DATA_ACTIONS.SET_SOCKET, socket});\n\n    socket.on(\"/gamesettings\", (gameSettings)=>{\n        dispatch({type: DATA_ACTIONS.SET_GAME_SETTINGS, gameSettings});\n      })\n    \n    socket.on(\"/sensortypes\", (sensorTypes)=>{\n        dispatch({type: DATA_ACTIONS.SET_SENSOR_TYPES, sensorTypes});\n    })\n\n    // socket.on(\"/updateSensors\", (plantClusters)=>{\n    //     dispatch({type: DATA_ACTIONS.SET_PLANT_CLUSTERS, plantClusters})\n    // });\n\n    // const fetch = (query)=>{\n    //     return new Promise((resolve, reject)=>{\n    //         if (prevFetched[query]){\n    //             if (environment.dev){\n    //                 console.log(\"reused cached query\");\n    //             }\n    //             resolve(prevFetched[query]);\n    //         } else {\n    //             sc.fetch(query)\n    //             .then((data)=>{\n    //                 prevFetched[query] = data;\n    //                 resolve(data);\n    //             }).catch(reject);\n    //         }\n    //     })\n    // }\n\n    // const builder = imageUrlBuilder(sc)\n\n    // const squareImage = (url, width)=>{\n    //     return builder.image(url).width(width).height(width).url();\n    // }\n\n    \n    // if (environment.dev){\n    //     environment.printstatus()\n    // } \n    // // title, description, \n    // fetch(\"*[_type == 'biomoddnews']{title, description, images[]{title, description, 'image':image.asset->url}} | order(_createdAt desc)\").then((news)=>{\n    //     dispatch({ type: DATA_ACTIONS.SET_NEWS, news});\n    // })\n\n    // fetch(\"*[_type == 'biomoddevent']{description, title, moment, available}|order(moment asc)\").then((events)=>{\n    //     dispatch({type: DATA_ACTIONS.SET_EVENTS, events});\n    // })\n\n    // fetch(\"*[_type == 'faq']{title, description}\").then((faqs)=>{\n    //     dispatch({type: DATA_ACTIONS.SET_FAQS, faqs})\n    // })\n\n    // return {\n    //     fetch,\n    //     environment,\n    //     squareImage\n    // }\n\n    return {\n        socket\n    }\n}\n\n\n\nexport default client;\n\n","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\n\n// const Input = ({label, value, setValue})=>{\n//     const theme = useSelector(state => state.data.theme);\n//     const [name, setName] = useState(\"\");\n    \n//     const handleSubmit = (evt) => {\n//         evt.preventDefault();\n//         alert(`Submitting Name ${name}`)\n//     }\n\n//     if (!theme){\n//         return null;\n//     } else {\n\n//     return (\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//             <theme.Text>\n//                 {label}&nbsp;&nbsp;\n//           </theme.Text>\n//           <input\n//             type=\"text\"\n//             value={value}\n//             onChange={e => setValue(e.target.value)}\n//           />\n//         </label>\n//       </form>\n//     );\n//     }\n// }\n\nexport function Input({label, setValue}) {\n    const [name, setName] = useState(\"\");\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        setValue(name);\n    }\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n            <code>\n                {label}&nbsp;\n          </code>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n        &nbsp;\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n\nexport default Input;","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Col, Row} from '../theme'\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../assets/logo.svg'\n\n\nconst Nav = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    \n\n    if (!theme ){\n        return null;\n    }\n\n    \n\n    return <Row center=\"xs\">\n\n\n        <Col xs={8} sm={2}>\n            <NavLink to=\"/\">\n            <img src={Logo} style={{width: \"100%\"}}/>\n            </NavLink>\n        </Col>\n        <Col xs={12} sm={10}>\n            <br/><br/>\n            <NavLink to=\"/\">\n            <theme.Text >\n              <span style={{color: \"white\", fontSize: \"4em\", fontWeight: \"bold\"}}>\n                  &nbsp;BIOMODD [BRG<sup>13</sup>]\n              </span>\n                \n            </theme.Text>\n            </NavLink>\n            <theme.Container>\n            <theme.Text>\n                <NavLink to=\"/gamelegacy\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> TEST GAME (legacy)\n                </NavLink>\n                <NavLink to=\"/server\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> TEST SERVER\n                </NavLink>\n                <NavLink to=\"/\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> HOME\n                </NavLink>\n            </theme.Text>\n            </theme.Container>\n            \n\n        </Col>\n\n       \n    </Row>\n\n}\n\nexport default Nav;\n\n\n{/* <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title>\n                    GoTo\n                </theme.Title>\n                <theme.Text>\n                  <ul>\n                    <li onClick={getScroller(newsref)}>\n                      -> news\n                    </li>\n                    <li onClick={getScroller(gameref)}>\n                      -> game\n                    </li>\n                    <li onClick={getScroller(restref)}>\n                      -> store and retrieve data (RESTful)\n                    </li>\n                    <li onClick={getScroller(socketref)}>\n                      -> store and retrieve data (WEBSOCKET)\n                    </li>\n                  </ul>\n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container> */}","// ===============================\n//      A U X\n// ===============================\nexport const getPointOnCircle = (p5, centrum, offset, division, section)=>{\n    let angle = ((2 * Math.PI) / division) * section;\n    let pos = p5.createVector(Math.cos(angle), Math.sin(angle));\n    pos.mult(offset);\n    pos.add(centrum);\n    return pos;\n}\n\n\n\nfunction sqr(x) { return x * x }\nfunction dist2(v, w) { return sqr(v.x - w.x) + sqr(v.y - w.y) }\nfunction distToSegmentSquared(p, v, w) {\n    var l2 = dist2(v, w);\n    if (l2 == 0) return dist2(p, v);\n    var t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;\n    t = Math.max(0, Math.min(1, t));\n    return dist2(p, { x: v.x + t * (w.x - v.x),\n        y: v.y + t * (w.y - v.y) });\n}\nexport const distToSegment = (p, v, w) =>{ return Math.sqrt(distToSegmentSquared(p, v, w)); }\n\n\n\n\nconst eps = 0.0000001;\nconst between = (a, b, c) => a - eps <= b && b <= c + eps;\n\nexport const segment_intersection = (x1, y1, x2,y2, x3, y3, x4, y4) => {\n\n\n    var x = ((x1*y2-y1*x2)*(x3-x4)-(x1-x2)*(x3*y4-y3*x4)) /\n        ((x1-x2)*(y3-y4)-(y1-y2)*(x3-x4));\n\n    var y = ((x1*y2-y1*x2)*(y3-y4)-(y1-y2)*(x3*y4-y3*x4)) /\n        ((x1-x2)*(y3-y4)-(y1-y2)*(x3-x4));\n\n    if(\n        (isNaN(x) || isNaN(y)) ||\n        (x1>=x2 && !between(x2, x, x1) || !between(x1, x, x2)) ||\n        (y1>=y2 && !between(y2, y, y1) || !between(y1, y, y2)) ||\n        (x3>=x4 && !between(x4, x, x3) || !between(x3, x, x4)) ||\n        (y3>=y4 && !between(y4, y, y3) || !between(y3, y, y4))\n    ) {\n        return false;\n    }\n\n    return true; //{x: x, y: y};\n\n};\n\n\n\nexport const mouseV = (p5)=>p5.createVector(p5.mouseX, p5.mouseY);","// ========================================\n//      I N T E R A C T I V E  O B J E C T\n// ========================================\n// an interactive object, that knows when clicked or dragged\n// currently assumes it is round\n\nexport const IO_STATE = Object.freeze({\n    UNSELECTED: \"unselected\",\n    CLICKED: \"clicked\",\n    HOVERING: \"hovering\",\n    DRAGGED: \"dragged\"\n})\n\nexport class InteractiveObject {\n    \n    constructor(location, size, ID){\n        this.location = location;\n        this.size = size;\n        this.state = IO_STATE.UNSELECTED;\n        this.ID = ID;\n    }\n\n    isOver(loc){\n        return loc.dist(this.location) < this.size/2;\n    }\n\n    isCurrentOver(p5){\n        return this.isOver(p5.createVector(p5.mouseX, p5.mouseY));\n    }\n\n    mousePressed(p5){\n        if (this.isCurrentOver(p5)){\n            this.state = IO_STATE.CLICKED;\n        }\n    }\n\n    mouseReleased(p5){\n        this.state = IO_STATE.UNSELECTED;\n        this.mouseMoved(p5);\n    }\n\n    mouseDragged(p5){\n        if (this.state !== IO_STATE.UNSELECTED){\n            this.state = IO_STATE.DRAGGED;\n        }   \n    }\n\n    mouseMoved(p5){\n        if (this.state === IO_STATE.UNSELECTED && this.isCurrentOver(p5)){\n            this.state = IO_STATE.HOVERING;\n        } else if (this.state === IO_STATE.HOVERING && !this.isCurrentOver(p5)){\n            this.state = IO_STATE.UNSELECTED;\n        }\n    }\n}","import {IO_STATE, InteractiveObject} from './interactiveObject.js'\n\nimport {distToSegment} from './auxi'\n\n// ===============================\n//      P L A N T\n// ===============================\n// Them plants\n\nclass Plant extends InteractiveObject {\n    constructor({location, size, color, alternativeColor, ID}){\n        super(location, size, ID);\n        this.color = color;\n        this.alternativeColor = alternativeColor;\n        this.collisionColor = 'red';\n        this.colorplaceholder = color;\n    }\n\n    detectCollision(lights){\n        let col = false;\n        for (let light of lights.values()) {\n            for (let j = 0; j < light.beam.segments.length; j++) {\n                var segment = light.beam.segments[j];\n\n                let line_v = {x: segment.p1_x, y: segment.p1_y};\n\n                let line_w = {x: segment.p2_x, y: segment.p2_y};\n\n                let point =  {x: this.location.x, y: this.location.y};\n                if (distToSegment(point, line_v, line_w) < this.size/2){   // collision\n                    col = true;\n                }\n\n            }\n        }\n        if (col) {\n            this.color = this.collisionColor;\n        } else {\n            this.color = this.colorplaceholder\n        }\n\n    }\n    draw(p5){\n        p5.noStroke();\n        if (this.state === IO_STATE.UNSELECTED || this.state === IO_STATE.HOVERING){\n            p5.fill(this.color);\n        } else {\n            if (this.state === IO_STATE.DRAGGED ){\n                this.location.x = p5.mouseX;\n                this.location.y = p5.mouseY;\n            }\n            p5.fill(this.alternativeColor);\n        }\n\n        let size = this.size;\n        if (this.state === IO_STATE.HOVERING){\n            size+=Math.sin(p5.millis())*2;\n        }\n        \n        p5.circle(this.location.x, this.location.y, size);\n    }\n}\n\nexport default Plant;","import {IO_STATE, InteractiveObject} from './interactiveObject'\nimport {mouseV} from './auxi'\n\n// the handle that allows for the rotation of the light\nclass Handle extends InteractiveObject {\n    constructor (location, size, circleSize, direction, color, strokeWeight){\n        super(location, size);\n        this.color = color;\n        this.strokeWeight = strokeWeight;\n\n        this.direction = direction;\n        this.circleSize = circleSize;\n    }\n\n    rotate(p5) {\n        // this should just update the direction, the rest will be handled by draw\n        let mousePos = mouseV(p5);\n        const diff = p5.createVector(0,0).set(this.location).sub(mousePos);\n        this.direction = p5.createVector(-diff.normalize().x, -diff.normalize().y);\n    }\n\n    // return the direction\n    // the object calling this might do something with the direction (eg: beam inverses the direction)\n    getDirection(p5) {\n        return this.direction;\n    }\n\n    // overwrite the function to detect hover based on the position of the handle\n    isOver(loc){\n        return loc && loc.dist(this.handlePosition) < this.size/2;\n    }\n\n\n    draw(p5){\n        if(this.state === IO_STATE.DRAGGED){\n            this.rotate(p5);\n        }\n\n        p5.strokeWeight(this.strokeWeight);\n        // draw the cirlce on which the handle moves\n        p5.noFill();\n        p5.stroke(this.color);\n        p5.circle(this.location.x, this.location.y, this.circleSize);\n        \n        let handleOffset = p5.createVector(this.direction.x, this.direction.y);\n        handleOffset.setMag(this.circleSize/2);\n\n        // calculate the handle position\n        this.handlePosition = p5.createVector(this.location.x, this.location.y).add(handleOffset);\n\n        // offset the handle in the direction needed:\n        // draw the handle\n        p5.noStroke();\n        p5.fill(this.color);\n        p5.circle(this.handlePosition.x, this.handlePosition.y, this.state===IO_STATE.UNSELECTED?this.size:this.size*1.2);\n    }\n\n}\n\nexport default Handle;\n","import {IO_STATE, InteractiveObject} from './interactiveObject'\nimport {mouseV} from './auxi'\nimport p5 from \"react-p5\"\nimport Handle from \"./handle.js\"\n\n\n// ===============================\n//      L I G H T\n// ===============================\n\n/* \n    Contains the objects: \n    - Segment:\n        Describes a segment on a beam of light, each segment is the result of a reflection off of a mirror\n    - Beam\n        Functionality of a full beam, this includes the ability to cast a beam in a direction and detect reflections\n    - Light:\n        Functionality of the full light, containing a beam, handle, and IO\n\n*/\n// The object that emits a beam of light\n\n\n\nclass Segment {\n    constructor(p1_x, p1_y, p2_x, p2_y, color, mirror){\n        this.p1_x = p1_x;\n        this.p1_y = p1_y;\n        this.p2_x = p2_x;\n        this.p2_y = p2_y;\n        this.color = color;\n        this.mirror = mirror;\n    }\n}\n\n\nclass Beam {\n\n    constructor(origin, direction, color, mirrors, p5){\n        this.origin = origin;\n        this.direction = direction;\n        this.color = color;\n        this.segments = [];\n        this.mirrors = mirrors;\n\n        // array to keep track of calculated intersection points\n        // this is mostly for debugging\n        this.intersectPoints = [];\n    }\n\n    setDirection(direction, p5){\n        this.direction = direction;\n        //this.createSegmentZero(p5);\n        //this.segments[0].direction = direction;\n    }\n\n\n    /* New function to cast a beam: \n    takes point of origin and direction\n    this function creates a beam and then checks if it reflects off a mirror (another new function);\n    on reflection it will create a segment, add it to the array and cast a new beam from the reflection point\n    */\n    cast(direction, startPoint, p5, cnt, mirror){\n        // draw from point of origin in direction\n        const beam = p5.createVector(startPoint).set(direction);\n        // set the beam length to the diagonal of the sketch so it always reaches the end of the screen\n        beam.setMag(Math.sqrt(Math.pow(p5.width, 2)+Math.pow(p5.height, 2)));\n        beam.add(startPoint);\n        \n        // check beam for reflection (function)\n        let reflectionData = this.reflect(startPoint, beam, direction, p5, mirror);\n        if(reflectionData!==false) {\n            // create segment and add to segments array\n            this.segments.push(new Segment(startPoint.x, startPoint.y, reflectionData.x, reflectionData.y, this.color, mirror));\n            // cast new beam from reflectionpoint\n            let reflectionStart = p5.createVector(reflectionData.x, reflectionData.y);\n            // keep counter to stop excessive recursion\n            cnt++;\n            if(cnt<1000){\n                this.cast(reflectionData.direction, reflectionStart, p5, cnt, reflectionData.mirror);\n            }\n        } else {\n            // no reflection has been detected\n            this.segments.push(new Segment(startPoint.x, startPoint.y, beam.x, beam.y, this.color, mirror));\n        }\n    }\n\n\n\n    reflect(beamStart, beamEnd, direction, p5, mirror){\n\n        let intersectionPoints = [];\n\n        // loop through mirrors\n        for(let i=0; i<this.mirrors.length; i++) {\n            let mirrorStart = this.mirrors[i].getPoints(p5)[0];\n            let mirrorEnd = this.mirrors[i].getPoints(p5)[1];\n\n            //if(this.mirrors[i].id == \"mirror_0\") console.log(\"x3: \"+ mirrorStart.x + \", y3: \"+ mirrorStart.y + \" | x4: \"+ mirrorEnd.x + \", y4: \"+ mirrorEnd.y);\n\n            // find the intersection \n            // see algorithm at https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line_segment\n            let t = ((mirrorEnd.x - mirrorStart.x) * (beamStart.y - mirrorStart.y) - (mirrorEnd.y - mirrorStart.y) * (beamStart.x - mirrorStart.x)) / ((mirrorEnd.y - mirrorStart.y) * (beamEnd.x - beamStart.x) - (mirrorEnd.x - mirrorStart.x) * (beamEnd.y - beamStart.y));\n            let u = ((beamEnd.x - beamStart.x) * (beamStart.y - mirrorStart.y) - (beamEnd.y - beamStart.y) * (beamStart.x - mirrorStart.x)) / ((mirrorEnd.y - mirrorStart.y) * (beamEnd.x - beamStart.x) - (mirrorEnd.x - mirrorStart.x) * (beamEnd.y - beamStart.y));\n\n            // check t & u to see if intersection is found\n            if((t>=0 && t<=1) && (u>=0 && u<=1)) {\n                // calculate intersectionpoint x & y, and the distance to the startpoint\n                let x = beamStart.x + t * (beamEnd.x - beamStart.x);\n                let y = beamStart.y + t * (beamEnd.y - beamStart.y);\n                let distance = p5.dist(beamStart.x, beamStart.y, x, y);\n                // save for later\n                if(this.mirrors[i].id!=mirror) {\n                    let reflectionNormal = this.mirrors[i].getReflection(p5);\n                    intersectionPoints.push({x: x, y: y, distance: distance, mirror: this.mirrors[i].id, direction: 0, reflectionNormal: reflectionNormal});\n                }\n            }\n            \n        }\n\n        // exit if no points have been found\n        if(intersectionPoints.length===0) {\n            return false;\n        } else {\n            let intersectionPoint = {};\n            // sort the found intersectionpoints by distance\n            if(intersectionPoints.length==1) {\n                // check if the one hit has a distance of 0\n                // this means it is a beam that has already reflected and does not hit anything else other than the starting mirror\n                if(intersectionPoints[0].distance==0) {\n                    console.log(\"no reflection except itself\");\n                    return false;\n                } else {\n                    intersectionPoint = intersectionPoints[0];\n                }\n            }  else {\n                // sort if there is more than one reflection point\n                intersectionPoints.sort((a,b) => (a.distance > b.distance) ? 1 : -1);\n\n                // check if the first hit has a distance of 0 (hit on the mirror from which a beam starts)\n                if(intersectionPoints[0].distance==0) {\n                    // skip the hit with distance 0\n                    intersectionPoint = intersectionPoints[1];\n                } else {\n                    intersectionPoint = intersectionPoints[0];\n                }\n                \n            }\n            \n            // calculate angle using P5 reflect function\n            let normDirection = p5.createVector(direction.x, direction.y);\n            let reflectVector = p5.createVector(intersectionPoint.reflectionNormal.x, intersectionPoint.reflectionNormal.y);\n            normDirection.reflect(reflectVector);\n            intersectionPoint.direction = normDirection;\n\n            // add to array and return\n            this.intersectPoints.push(intersectionPoint);\n            return intersectionPoint;\n        }\n        \n    }\n    \n\n    draw(p5, direction) {\n        \n        // reset segments\n        this.segments = [];\n        // debug: points of intersection\n        this.intersectPoints = [];\n        // cast first beam (this starts the population of the segments array)\n        this.cast(p5.createVector(-direction.x, -direction.y), this.origin, p5, 0, null);\n        \n        // this debug flag shows or hide the dots that indicate intersection points on the beam\n        let debug = false;\n        if(debug){\n            if(this.intersectPoints.length>0) {\n                //console.log(\"Number of intersection points: \"+ this.intersectPoints.length);\n                for(let j=0; j<this.intersectPoints.length; j++) {\n                    //console.log(this.intersectPoints[j].distance);\n                    p5.fill(\"rgb(0, 255, 255)\");\n                    p5.circle(this.intersectPoints[j].x, this.intersectPoints[j].y, 10);\n                }\n            }\n        }\n        \n        p5.noFill();\n\n        // loop through and draw segments\n        for (let i=0; i<this.segments.length; i++){\n            //console.log(this.segments[i].mirror);\n            p5.stroke(this.segments[i].color);\n            p5.line(this.segments[i].p1_x, this.segments[i].p1_y, this.segments[i].p2_x, this.segments[i].p2_y);\n        }\n    }\n    \n}\n\n\n\nclass Light extends InteractiveObject {\n    constructor({color, size, location, controlOffset, strokeWeight}, mirrors, p5){\n        super(location, size);\n        this.color = color;\n        this.controlOffset = controlOffset;\n        this.strokeWeight = strokeWeight;\n\n         \n        // set random direction (direction needs to come from biomodd server) and create handle\n        let randDirection = p5.createVector(p5.random(-1, 1), p5.random(-1, 1));\n        this.handle = new Handle(this.location, 10, 50, randDirection, this.color, this.strokeWeight);\n\n        // create the beam with the direction from the handle\n        this.beam = new Beam(this.location, p5.createVector(-this.handle.getDirection(p5).x, -this.handle.getDirection(p5).y), color, mirrors, p5);        \n    }\n\n    draw(p5){\n\n        // draw circle for the light\n        p5.noStroke();\n        p5.fill(this.color);\n        p5.circle(this.location.x, this.location.y, this.size);\n        p5.noFill();\n\n        // draw handle\n        this.handle.draw(p5);\n\n        // draw beam\n        this.beam.draw(p5, this.handle.getDirection(p5));\n    }\n\n    /*\n    // Probably not used anymore\n    handleOffset(){\n        return (this.controlOffset+this.size)/2;\n    }\n\n    // Probably not used anymore\n    getDirection(p5){\n        this.handle.getDirection(p5);\n    }\n    */\n\n    \n\n\n    // ---- I/O stuff \n    // passing interactions down to the handle member\n    mousePressed(p5){\n        super.mousePressed(p5);\n        this.handle.mousePressed(p5);\n    }\n\n    mouseReleased(p5){\n        super.mouseReleased(p5);\n        this.handle.mouseReleased(p5);\n    }\n\n    mouseDragged(p5){\n        super.mouseDragged(p5);\n        this.handle.mouseDragged(p5);\n    }\n\n    mouseMoved(p5){\n        super.mouseMoved(p5);\n        this.handle.mouseMoved(p5);\n    }    \n}\n\nexport default Light;","import {InteractiveObject, IO_STATE} from './interactiveObject.js'\nimport Handle from \"./handle.js\"\nimport {segment_intersection} from \"./auxi\";\n\n\nclass Mirror extends InteractiveObject {\n    constructor({location, size, color, alternativeColor, direction, ID, player}, p5){\n        super(location, size, ID);\n        this.color = color;\n        this.alternativeColor = alternativeColor;\n        this.rotation = 0;\n        this.strokeWeight = 5;\n        this.player = player;\n        // store mirror id, as it can help with debugging\n        // this.id = \"mirror_\"+id;\n        \n        // generate a random direction and create the handle\n        let randDirection = p5.createVector(p5.random(-1, 1), p5.random(-1, 1));\n        this.handle = new Handle(this.location, 10, 25, randDirection, this.color, 2);\n\n        // store the normalized vectors used to calculate reflection angles\n        this.reflectionNormals = [null, null];\n    }\n\n    \n    // gets the start and end coordinates of the mirror\n    // returns an array of length 2, with each element being an object containing an x & y value\n    getPoints(p5){\n        // calculate the start and end point of the mirror\n        // adjust vector based on the direction set by the handle\n        let adjustV = this.handle.getDirection(p5).setMag(this.size/2);\n        let adjust = p5.createVector(adjustV.x, adjustV.y).rotate(Math.PI/2);\n\n        // startpoint of mirror\n        let startPoint = p5.createVector(this.location.x, this.location.y);\n        startPoint.add(p5.createVector(-adjust.x, -adjust.y));\n        // endpoint\n        let endPoint = p5.createVector(this.location.x, this.location.y);\n        endPoint.add(adjust);\n        \n        return [{x: startPoint.x, y: startPoint.y}, {x: endPoint.x, y: endPoint.y}];\n    }\n\n\n    // gets the point of reflection from light.beam and calculates the normalized vector around which to reflect the beam\n\n    getReflection(p5){\n        // return the direction vector\n        return p5.createVector(this.handle.direction.x, this.handle.direction.y);\n    }\n\n    \n    // is a given coordinate (loc) over this mirror?\n    isOver(loc){\n        // needs to be rewritten!\n        let x = loc.x;\n        let y = loc.y;\n        return this.location.x <= x && x <= this.location.x + this.strokeWeight &&\n            this.location.y <= y && y <= this.location.y + this.size;\n    }\n\n   \n   draw(p5){\n       //p5.noStroke();\n       p5.strokeWeight(this.strokeWeight);\n       p5.stroke(this.color);\n       if (this.state !== IO_STATE.UNSELECTED && this.state !== IO_STATE.HOVERING){\n           if (this.state === IO_STATE.DRAGGED ){\n               this.location.x = p5.mouseX ;\n               this.location.y = p5.mouseY ;\n            }\n        }\n        \n        let size = this.size;\n        if (this.state === IO_STATE.HOVERING){\n            size+=Math.sin(p5.millis())*2;\n        }\n       \n        // draw the line\n        let linePoints = this.getPoints(p5);\n        p5.line(linePoints[0].x, linePoints[0].y, linePoints[1].x, linePoints[1].y);\n\n        // draw the handle\n        this.handle.draw(p5);\n\n        // debug: show reflection normals\n        let debug = false;\n        if(debug) {\n            p5.stroke(\"rgba(0, 255, 255, 1)\");\n            for(let i=0; i<this.reflectionNormals.length; i++) {\n                if(this.reflectionNormals[i]!=null) {\n                    p5.line(this.reflectionNormals[i].origin.x, this.reflectionNormals[i].origin.y, this.reflectionNormals[i].vector.x, this.reflectionNormals[i].vector.y);\n                }\n            }\n        }\n        \n    }\n    \n\n    // ---- I/O stuff \n    // passing interactions down to the handle member\n    mousePressed(p5){\n        super.mousePressed(p5);\n        this.handle.mousePressed(p5);\n    }\n\n    mouseReleased(p5){\n        super.mouseReleased(p5);\n        this.handle.mouseReleased(p5);\n    }\n\n    mouseDragged(p5){\n        super.mouseDragged(p5);\n        this.handle.mouseDragged(p5);\n    }\n\n    mouseMoved(p5){\n        super.mouseMoved(p5);\n        this.handle.mouseMoved(p5);\n    }    \n}\n\nexport default Mirror;","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport {getPointOnCircle} from './auxi'\nimport Plant from './plant'\nimport Light from './light'\nimport Mirror from \"./mirror\";\n\n// ===============================\n// ===============================\n//      G A M E\n// ===============================\n// ===============================\nexport default ({socket, player, mirrorsPerPlayer, safeDistance, scoreUpdate}) => {\n\n    // enumerations\n\n    // globals\n    const lights        = new Map();\n    const plants        = [];\n\n    const mirrors        = [];\n\n\n    // -- keep track of all objects we want to draw \n    // --- expects they implemented a draw(p5) method\n    const toDraw        = [];\n\n    // -- keep track of all objects we want to interact with \n    // --- expects they implemented all interactive methods as defined in the InteractiveObject class\n    const toInteract    = [];\n\n    const settings = {\n        background: \"black\"\n    }\n\n    const lightSettings = {\n        size: 30, \n        controlOffset: 20,\n        offset: .4,\n        strokeWeight: 2\n    };\n\n    const plantSettings = {\n        amount: 1,\n        size: 40,\n        color: \"darkgreen\",\n        alternativeColor: \"lightgreen\"\n    }\n\n    const mirrorSettings = {\n        amount: 5,\n        size: 50,\n        color: \"magenta\",\n        alternativeColor: \"0f0\"\n    }\n    \n    // ===============================\n    //      A U X\n    // ===============================\n    const getCenter = (p5)=>{\n        return p5.createVector(p5.width*.5, p5.height*.5);\n    }\n\n    const getRandomPoint = (p5)=> p5.createVector(Math.random()*p5.width, Math.random()*p5.height);\n    \n    // ===============================\n    //      S E T U P\n    // =============================== \n\tconst setup = (p5, canvasParentRef) => {\n        console.log(\"game started\")\n        // setup canvas\n        if (canvasParentRef && canvasParentRef.offsetWidth){\n            console.log(canvasParentRef.offsetWidth)\n            p5.createCanvas(canvasParentRef.offsetWidth, window.screen.height).parent(canvasParentRef);\n        } else {\n            throw \"canvas not found\"\n        }\n\n        // create mirrors\n        \n        \n        // create plants\n        // for (let i = 0; i < plantSettings.amount; i++){\n        //     plants[i] = new Plant({location: getRandomPoint(p5), ...plantSettings});\n        //     toDraw.push(plants[i]);\n        //     toInteract.push(plants[i]);\n        // }\n\n\n        // setup sockets\n        socket.on(\"/gameUpdate\", (gameUpdate)=>{\n            if (plants.length){\n                // update location\n\n            } else {\n                //  instantiate \n                gameUpdate.plants.forEach((p, i, arr)=>{\n                    plants[i] = new Plant({location: p5.createVector(p.x*p5.width, p.y*p5.height), ID: p.ID,...plantSettings});\n                    toDraw.push(plants[i]);\n                    toInteract.push(plants[i]);\n                });\n            }\n\n            if (mirrors.length){\n                // update\n            } else {\n                gameUpdate.mirrors.forEach((m, i, arr)=>{\n                    mirrors[i] = new Mirror({location: p5.createVector(m.x*p5.width, m.y*p5.height), player: m.player, ID: m.ID,...mirrorSettings}, p5);\n                    toDraw.push(mirrors[i]);\n                    toInteract.push(mirrors[i]);\n                });\n\n                \n\n                let colors = [\"red\", \"green\", \"blue\"];\n                colors.forEach((color, i)=>{\n                    lights.set(color, new Light(\n                        {\n                            color, \n                            location: getPointOnCircle(p5, getCenter(p5), p5.width*lightSettings.offset, 3, i),\n                            ...lightSettings\n                    }, mirrors, p5));\n                    toDraw.push(lights.get(color));\n                    toInteract.push(lights.get(color));\n                })\n            }\n\n        })\n\t};\n\n\n    // ===============================\n    //      D R A W\n    // =============================== \n\tconst draw = (p5) => {\n\t\tp5.background(settings.background);\n        toDraw.forEach(td=>td.draw(p5));\n        plants.forEach(mr=>mr.detectCollision(lights));\n\n        if (p5.frameCount%scoreUpdate == 0){\n            socket.emit(\"/score\", {player, score: p5.frameCount})\n            socket.emit(\"/giveGameUpdate\");\n        }\n\t};\n\n    // ===============================\n    //      I / O\n    // =============================== \n\tconst mousePressed = (p5)=>{\n        toInteract.forEach(ti=>ti.mousePressed(p5));\n\t}\n\n    const mouseReleased = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseReleased(p5));\n    }\n\n    const mouseDragged = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseDragged(p5));\n    }\n\n    const mouseMoved = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseMoved(p5));\n    }\n\n\treturn <Sketch  setup={setup} \n                    draw={draw} \n                    mousePressed={mousePressed} \n                    mouseReleased={mouseReleased} \n                    mouseDragged={mouseDragged}\n                    mouseMoved={mouseMoved}\n                    \n                    />;\n};\n","import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nconst SensorType = ({name, description})=>{\n    const [open, setOpen] = useState(false);\n\n    const toggle = ()=>{\n        setOpen(!open);\n    }\n\n    return <div >\n\n            {open?<br/>:null}\n        \n            <span>\n            --->&nbsp;\n            </span>\n            <span className=\"hoverer\" onClick={toggle}>\n                [{name}] {open?<span>[X]</span>:null}\n            </span>\n        \n        <br/>\n        {open?\n        <div className=\"indenter\" >\n            {description}\n            <br/><br/>\n        </div> : null}\n    </div>\n\n}\n\nconst SensorTypes = ()=>{\n    const sensorTypes = useSelector(state => state.data.sensorTypes)\n    const [open, setOpen] = useState(false);\n\n    const toggle = ()=>{\n        setOpen(!open);\n    }\n\n    if (!sensorTypes){\n        return null;\n    }\n\n    return <div>\n        <span >\n            --> <span className=\"hoverer\" onClick={toggle}>  SENSORTYPES   {open?<span>[X]</span>:null}</span>\n        </span>\n        \n        {open?sensorTypes.map(st=><SensorType key={st.name} name={st.name} description={st.description} />):null}\n    </div>\n\n    \n}\n\nexport default SensorTypes;","import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nconst Sensor = ({type, value})=>{\n    const [history, setHistory] = useState([]);\n\n    useEffect(()=>{\n\n    })\n\n    return <div className=\"indenter\">\n        {type} - {value}\n    </div>\n\n}\n\nconst Plant = ({name, sensors})=>{\n    const [open, setOpen] = useState(false);\n\n    const toggle = ()=>{\n        setOpen(!open);\n    }\n\n    return <div >\n\n            {open?<br/>:null}\n        \n            <span>\n            --->&nbsp;\n            </span>\n            <span className=\"hoverer\" onClick={toggle}>\n                [{name}] {open?<span>[X]</span>:null}\n            </span>\n        \n        <br/>\n        {open?\n        <div className=\"indenter\" >\n            {sensors.map((s, i)=><Sensor key={\"sensor\"+i} type={s.type} value={s.value} />)}\n            <br/><br/>\n        </div> : null}\n    </div>\n\n}\n\nconst Plants = ()=>{\n    const socket = useSelector(state=>state.data.socket);\n    const [plantClusters, setPlantClusters] = useState(null);\n    const [open, setOpen] = useState(false);\n\n\n    const toggle = ()=>{\n        setOpen(!open);\n    }\n\n    if (socket){\n        socket.on(\"/updateSensors\", (plantClusters)=>{\n            setPlantClusters(plantClusters);\n        });\n    }\n\n    useEffect(()=>{\n    })\n\n    if (!plantClusters){\n        return null;\n    }\n\n    return <div>\n        <span >\n            --> <span className=\"hoverer\" onClick={toggle}>  PLANTS   {open?<span>[X]</span>:null}</span>\n        </span>\n        \n        {open?plantClusters.map(p=><Plant key={p.name} name={p.name} sensors={p.sensors} />):null}\n    </div>\n\n    \n}\n\nexport default Plants;","import React, {useState, useEffect} from \"react\";\n\nconst Countdown = ({target, displaytext, endText})=>{\n    const [rt, setrt] = useState(null);\n    const [count, setCount] = useState(0);\n  \n    const secondsToTarget = ()=>{\n      if (rt){\n        return Math.floor(Math.abs((new Date().getTime() - rt.getTime()) / 1000));\n      } else {\n        return null;\n      }\n    }\n  \n    useEffect(()=>{\n      let int = null;\n  \n      if (target !== rt){\n        setrt(target);\n        setCount(null);\n      }\n  \n      if (rt){\n        int = setInterval(()=>{\n          setCount(secondsToTarget());\n        }, 500);\n      }\n  \n      return ()=>{\n        if(int){\n          clearInterval(int)\n        }\n      }\n    })\n  \n    if (!target || !rt || !count){\n      return null;\n    } else if (count && count > 0){\n      return <div>\n        {displaytext}: {count}\n      </div>\n    } else {\n      return <div> {endText} </div>\n    } \n  }\n\nexport default Countdown;","import React, {useEffect, useState} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Grid, Col, Row, Theme} from '../theme'\nimport SensorTypes from './sensorTypes';\nimport Plants from './plants';\nimport Countdown from './countdown';\n\nconst Controller = ({phase, phases, target, player})=>{\n    const [theme, socket, client, gameSettings, plantClusters, sensorTypes] = useSelector(state => \n        [ state.data.theme, \n          state.data.socket, \n          state.data.client, \n          state.data.gameSettings,\n          state.data.plantClusters,\n          state.data.sensorTypes\n        ]);\n\n    useEffect(()=>{\n        // console.log(plantClusters)\n    })\n\n    \n    if (!theme || !client || !gameSettings || !socket || !sensorTypes){\n        return null;\n    }  \n\n    return <div>\n                <br/>\n                <p>\n                    ||==================================||\n                        &nbsp;&nbsp;&nbsp; BIOMODD [BRG<sup>13</sup>] SPECTRUM\n                    ||==================================||\n                </p>\n                \n                <div> \n                    GameStatus = {phase} \n                </div>\n                <div>\n                    {player? <span>PlayerColor = {player} </span> : null}\n                </div>\n                <div>\n                    {(target && phase == phases.RUNNING)? <span> <Countdown target={target} displaytext={\"Time remaining\"} endText={\"THE END\"} /> </span> : null}\n                </div>\n\n                <br/>\n                \n\n                <SensorTypes />\n                <Plants />\n                {/* {sensorTypes.map(st=><div>\n                    {st.name}\n                </div>)} */}\n\n    </div>;\n}\n\nexport default Controller;","import React from 'react'\n\nconst Score = ({socket})=>{\n    return \"i will be score\";\n}\n\nexport default Score;","import React, {useEffect, useState} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Grid, Col, Row, Theme} from '../theme'\nimport { io } from \"socket.io-client\";\nimport Spectrum from '../components/spectrum'\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport Controller from './controller'\nimport Countdown from './countdown';\nimport Score from './score';\n\nconst Game = ()=>{\n    const [theme, socket, client, gameSettings, plantClusters, sensorTypes] = useSelector(state => \n      [ state.data.theme, \n        state.data.socket, \n        state.data.client, \n        state.data.gameSettings,\n        state.data.plantClusters,\n        state.data.sensorTypes\n      ]);\n    const handle = useFullScreenHandle();\n    const [start, setStart] = useState(null);\n    const gamewidth = 9;\n    const PHASES = Object.freeze({\n      LOAD: \"load\",\n      RUNNING: \"running\",\n      END: \"ended\"\n    });\n    const [phase, setPhase] = useState(PHASES.END);\n    const [players, setPlayers] = useState(null);\n    const [player, setPlayer] = useState(null);\n    const [target, setTarget] = useState(null);\n    const [listeners, setListeners] = useState(null);\n\n    const setTargetFromDate = (seconds)=>{\n      const d = new Date();\n      d.setSeconds( d.getSeconds() + seconds);\n      setTarget(d)\n    }\n\n    useEffect(()=>{\n\n      if (socket){\n        setListeners(true);\n        socket.on(\"/phase\", (newphase)=>{\n          setPhase(newphase);\n          switch(newphase){\n            case PHASES.END:\n              setPlayer(null);\n              setTarget(null);\n              break;\n            case PHASES.LOAD:\n              if (gameSettings){\n                setTargetFromDate(gameSettings.beginningTime);\n              }\n              break;\n            case PHASES.RUNNING:\n              if (gameSettings){\n                setTargetFromDate(gameSettings.duration);\n              }\n              break;\n          } \n        })\n\n        if (!players){\n          socket.emit(\"/givePlayers\"); \n        }\n    \n        socket.on(\"/players\", (newplayers)=>{\n          setPlayers(newplayers);\n        })\n      }\n\n      return ()=>{\n        // clean up our listeners here\n        if (socket){\n          socket.off(\"/phase\");\n          socket.off(\"/players\");\n          setListeners(false);\n        }\n      }\n    }, [listeners, setListeners, socket, gameSettings])\n\n    const go = ()=>{\n        setStart(true);\n        handle.enter();\n    }\n\n    const MakePlayer = (color)=>{\n\n      const killed = <div className=\"kill\" >\n        [PLAY {color.toUpperCase()}]\n      </div>;\n\n      const selected = <div>\n        [{color.toUpperCase()} SELECTED]\n      </div>;\n\n      if (player){\n        if (player == color){\n          return selected;\n        } else if (player == color+\"s\"){\n            return selected;\n        } else {\n          return killed;\n        }\n      }\n\n      if (players[color] && players[color+\"s\"]){\n        return killed;\n      } else if (players[color]){\n        return <div className=\"hoverer\" onClick={()=>{\n          if (!player){\n            socket.emit(\"/startgame\", color+\"s\");\n            setPlayer(color+\"s\");\n          }\n        }}>\n          [PLAY {color.toUpperCase()} support]\n        </div>\n      } else {\n        return <div className=\"hoverer\" onClick={()=>{\n          if (!player){\n            socket.emit(\"/startgame\", color);\n            setPlayer(color)\n          }\n        }}>\n          [PLAY {color.toUpperCase()}]\n        </div>\n      }\n    }\n\n    const content = ()=>{\n      switch(phase){\n        case PHASES.LOAD : \n        case PHASES.END :\n\n          return <div style={{color: \"white\", width: \"100%\", textAlign:\"center\"}}>\n            <br/><br/><br/>\n            || ==== LOAD NEW GAME ==== ||\n            <br/><br/>\n\n            <div >\n              {MakePlayer(\"red\")}\n              {MakePlayer(\"green\")}\n              {MakePlayer(\"blue\")}\n            </div>\n\n            <br/><br/><br/>\n            <Countdown target={target} displaytext={\"Time before launch\"} endText=\"LETS GO\"/>\n          </div>\n          break;\n        case PHASES.RUNNING : \n          return <Spectrum socket={socket} player={player} scoreUpdate={gameSettings.scoreUpdate} />;\n          break;\n      }\n    }\n\n    if (!theme || !client || !gameSettings || !players){\n        return null;\n    }\n\n    return <div>\n      {start?null:<button onClick={go}>LOAD</button>}\n\n      <FullScreen handle={handle}>\n        <Row>\n          <Col xs={12} sm={12} md={gamewidth}>\n            <theme.Empty style={{padding: \"0\", margin: \"0\"}}>\n              <div style={{width: \"100%\", height: \"100vh\"}}> \n                {(gameSettings)?start?content():content() : null}\n                </div>\n                <div>\n                  <Score socket={socket} />\n                </div>\n            </theme.Empty>\n          </Col>\n          <Col xs={12} md={12-gamewidth} style={{background: \"black\", color: \"white\", borderLeft: \"solid 2px white\"}}>\n            <Controller phase={phase} phases={PHASES} target={target} player={player} />\n          </Col>\n        </Row>\n      </FullScreen>\n    </div>\n}\n\nexport default Game;\n\n\n","import Theme from '../theme'\n\n\nclass BuilderTheme extends Theme {\n    constructor(){\n      super()\n      this.font = \"Fira Code\"\n      this.sizes.normal = \"1.2em\"\n    }\n  \n    get defaultFont(){\n      return `${super.defaultFont}font-weight: 400;`\n    }\n  \n    get Title(){\n      return this.styled(super.Title)` font-weight: bold;`\n    }\n  }\n  \n  \n\n  export default BuilderTheme;","import React, {useState, useEffect, useRef} from 'react';\nimport { Grid, Col, Row} from '../theme'\nimport { useSelector } from \"react-redux\";\nimport Nav from '../components/nav'\n\nimport BlockContent from '@sanity/block-content-to-react';\nimport { NavLink } from 'react-router-dom';\nimport Moment from 'react-moment';\n\n\nconst Home = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    const news = useSelector(state => state.data.news);\n    const events = useSelector(state=>state.data.events)\n    const faqs = useSelector(state=>state.data.faqs)\n    const newsref = useRef(null);\n    \n    if (!theme){\n        return null;\n    } else {\n\n      const getEvents = (events)=>events.map(({title, description, available, moment})=><div key={title}>\n      <theme.SubTitle>\n        <Moment format=\"DD/MM\">{moment}</Moment> &nbsp;&nbsp; {title}\n      </theme.SubTitle>\n      <theme.Text>\n          <BlockContent blocks={description} />\n      </theme.Text>\n      <theme.Text>\n          <i>\n            Available places: {available}\n          </i>\n      </theme.Text>\n      <br/>                  <br/>                  <br/>\n    </div>)\n        \n  \n    return <Row align=\"center\">\n      <Col xs={12}>\n      <Nav />\n      </Col>\n        \n        \n      <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={newsref}>\n                    NEWS\n                </theme.Title>\n                <br/>\n\n                {news?\n\n                news.map(({title, description, images})=><>\n                  <theme.SubTitle key={title}>\n                    {title}\n                  </theme.SubTitle>\n                  <theme.Text>\n                      <BlockContent blocks={description} />\n                  </theme.Text>\n                  {(images && images.length)?\n                  images.map(({title, description, image})=><>\n                      <theme.Text key={title}>\n                        <b>\n                        {title}\n                        </b>\n                      </theme.Text>\n                      <img src={image} alt={title} style={{width: \"100%\"}} />\n                      <theme.Text>\n                        <i>\n                        <BlockContent blocks={description} />\n                        </i>\n                      </theme.Text>\n                  </>)\n                  : null}\n                  <br/>\n                </>)\n                \n                : <theme.Text>L O A D I N G</theme.Text>}\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title >\n                    Frequently Asked Questions\n                </theme.Title>\n                <br/>\n\n                {faqs?\n                  faqs.map(({title, description})=><theme.Text key={title}>\n                    <b>\n                      {title}\n                    </b> <br/>\n                    <BlockContent blocks={description} />\n                  </theme.Text>)\n                : <theme.Text>L O A D I N G</theme.Text>}\n\n                <br/>\n                             \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title >\n                    EVENTS\n                </theme.Title>\n                <br/>\n\n                {events?\n                  getEvents(events.filter((e)=>{\n                    const today = new Date()\n                    const yesterday = new Date(today)\n                    yesterday.setDate(yesterday.getDate() - 1)\n                    return new Date(e.moment) >= yesterday;\n                  }))                \n                : <theme.Text>L O A D I N G</theme.Text>}\n\n                <br/>\n                <theme.Title >\n                    PAST EVENTS\n                </theme.Title>\n                <br/>\n\n\n                {events?\n                  getEvents(events.filter((e)=>{\n                    const today = new Date()\n                    const yesterday = new Date(today)\n                    yesterday.setDate(yesterday.getDate() - 1)\n                    return new Date(e.moment) < yesterday;\n                  }))                \n                : null}                \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n\n        \n\n        \n\n      </Row>\n      \n    \n    }\n\n    \n  }\n\nexport default Home;","import React, {useEffect} from 'react';\nimport Theme, {OverviewPage} from './theme'\nimport { Provider } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store\";\nimport { createBrowserHistory } from 'history';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ACTIONS as DATA_ACTIONS } from \"./reducers/DataReducer\"\nimport sanityclient from './client';\nimport Server from './components/server'\n\n\nimport { Grid, Col, Row} from './theme'\nimport Game from './components/game'\n\n\nimport './assets/fonts/'\nimport BuilderTheme from './services/Buildertheme'\nimport Home from './components/Home'\n\nconst DataHelper = () => {\n  const data = useSelector(state => state.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!data.client && dispatch){\n      const cli = sanityclient(dispatch);\n      dispatch({ type: DATA_ACTIONS.SET_CLIENT, client: cli});\n    } \n\n    if (!data.theme && dispatch ){\n      const builder = new BuilderTheme();\n      dispatch({type: DATA_ACTIONS.SET_THEME, theme: new BuilderTheme()})\n      // dispatch({type: DATA_ACTIONS.SET_THEMES, themes: [new BuilderTheme()]})\n    }\n\n  })\n  return (\n    null\n  )\n}\n\n\nconst App =()=>{\n  const history = createBrowserHistory()\n  const theme = new BuilderTheme();\n\n  return (\n    <Provider store={Store}>\n    <DataHelper />\n      <Router history={history}>\n\n        <Grid style={{width: \"100%\", minWidth: \"100%\", margin: 0, padding: 0}}>\n\n        \n\n        \n        \n      \n        <span>\n       \n            <Switch>\n              <Route exact path=\"/\" component={Game} />\n              {/* <Route exact path=\"/overview\" component={OverviewPage} />\n              <Route exact path=\"/server\" component={Server} /> */}\n              <Route exact path=\"/gamelegacy\" component={Game} />\n              <Route component={Home}/>\n            </Switch>\n        </span>\n\n        </Grid>\n      </Router>\n  </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// import './assets/fonts/OCP'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4ef8c6e8.svg\";"],"sourceRoot":""}