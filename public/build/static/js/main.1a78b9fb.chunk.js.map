{"version":3,"sources":["theme/index.js","reducers/DataReducer.js","rootreducer.js","Store.js","client/environment.js","client/index.jsx","components/Input.js","components/nav.js","components/spectrum/auxi.js","components/spectrum/interactiveObject.js","components/spectrum/plant.js","components/spectrum/handle.js","components/spectrum/light.js","components/spectrum/mirror.js","components/spectrum/index.js","components/sensorTypes.js","components/plants.js","components/countdown.js","components/controller.js","components/score.js","components/LoaderScreen.js","components/game.js","services/Buildertheme.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["Theme","this","colors","primary","secondary","tertiary","text","defaultWrapWidth","font","sizes","normal","title","subtitle","medias","em","xs","sm","md","lg","px","query","onlySmall","largerthansm","mdandup","smallerthanmd","padding","styled","pre","values","post","children","EmptyDiv","content","defaultWrap","responsive","EmptySpan","defaultFont","div","Title","props","border","span","ACTIONS","Object","freeze","SET_CLIENT","Symbol","SET_NAV_OPEN","SET_THEME","SET_THEMES","SET_NEWS","SET_EVENTS","SET_FAQS","SET_SENSOR_TYPES","SET_PLANT_CLUSTERS","SET_SOCKET","SET_GAME_SETTINGS","initialState","client","navopen","window","innerWidth","theme","themes","news","events","faqs","sensorTypes","plantClusters","socket","gameSettings","rootReducer","combineReducers","data","state","action","type","SET_SELECTED","selected","middleware","applyMiddleware","thunkMiddleware","Store","createStore","envi","dev","location","hostname","status","document","printstatus","console","log","dispatch","settings","io","transports","DATA_ACTIONS","on","Input","Nav","useSelector","center","to","src","Logo","style","width","Text","color","fontSize","fontWeight","Container","getPointOnCircle","p5","centrum","offset","division","section","angle","Math","PI","pos","createVector","cos","sin","mult","add","sqr","x","dist2","v","w","y","distToSegment","p","sqrt","l2","t","max","min","distToSegmentSquared","IO_STATE","UNSELECTED","CLICKED","HOVERING","DRAGGED","InteractiveObject","size","easer","target","value","easing","checkChanged","rv","changed","loc","dist","isOver","mouseX","mouseY","isCurrentOver","mouseMoved","Plant","alternativeColor","onClick","collisionColor","colorplaceholder","currentColors","red","green","blue","lights","col","currenctColors","light","j","beam","segments","length","segment","line_v","p1_x","p1_y","line_w","p2_x","p2_y","point","noStroke","fill","millis","circle","Handle","circleSize","direction","strokeWeight","mousePos","mouseV","diff","set","sub","normalize","handlePosition","rotate","noFill","stroke","handleOffset","setMag","Segment","mirror","Beam","origin","mirrors","intersectPoints","startPoint","cnt","pow","height","reflectionData","reflect","push","reflectionStart","cast","beamStart","beamEnd","intersectionPoints","i","mirrorStart","getPoints","mirrorEnd","u","distance","ID","reflectionNormal","getReflection","intersectionPoint","sort","a","b","normDirection","reflectVector","line","Light","controlOffset","hide","player","randDirection","random","handle","getDirection","iPlay","draw","mousePressed","mouseReleased","mouseDragged","Mirror","rotation","reflectionNormals","tester","adjustV","adjust","endPoint","tx","ty","linePoints","degrees","iPlayer","players","scoreUpdate","safeDistance","Map","plants","toDraw","toInteract","lightSettings","plantSettings","amount","mirrorSettings","getCenter","setup","canvasParentRef","offsetWidth","createCanvas","screen","parent","gameUpdate","forEach","arr","emit","index","newmirror","rx","ry","setNormalizedLocation","m","dir","get","c","l","background","td","mr","detectCollision","frameCount","score","map","ti","SensorType","name","description","useState","open","setOpen","className","SensorTypes","st","key","Sensor","useEffect","sensors","init","s","Plants","Countdown","displaytext","endText","rt","setrt","count","setCount","int","setInterval","floor","abs","Date","getTime","clearInterval","Controller","phase","phases","setPlantClusters","setSelected","setScore","highScore","setHighScore","selector","score_","highscore_","off","getVal","getSelected","RUNNING","HS1","HSA","Score","LoaderScreen","setPlayer","MakePlayer","killed","toUpperCase","textAlign","Game","PHASES","LOAD","END","start","setStart","setPhase","setPlayers","setTarget","listeners","setListeners","useDispatch","useFullScreenHandle","setTargetFromDate","seconds","d","setSeconds","getSeconds","newphase","beginningTime","duration","newplayers","enter","Empty","margin","borderLeft","BuilderTheme","Home","newsref","useRef","getEvents","available","moment","SubTitle","format","blocks","align","Wrapped","ref","images","image","alt","filter","e","today","yesterday","setDate","getDate","DataHelper","cli","sanityclient","App","history","createBrowserHistory","store","minWidth","exact","path","component","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.1a78b9fb.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport \"./theme.css\"\nimport Overview from './pages/overview'\nexport {Grid, Col, Row } from 'react-styled-flexboxgrid';\n/* \n    - TOAST\n    - support multiple themes\n    - set basic html (background etc)\n    - build in version control\n    - Text\n    - Title\n    - Subtitle\n    - Container\n    - CollapsibleContainer\n    - Button\n*/\n\nexport const OverviewPage = Overview;\n\nlet settings = {\n    \n};\n\nclass Theme {\n    constructor() {\n        this.colors = {\n          primary: \"black\",\n          secondary: \"white\",\n          tertiary: \"red\"\n        };\n\n        this.colors.text = {\n            primary: this.colors.secondary,\n            secondary: this.colors.primary\n        }\n\n        this.defaultWrapWidth = 3;\n\n        this.font = \"American Typewriter\"\n\n        this.sizes = {\n            normal: \"1.2em\",\n            title: \"2em\",\n            subtitle: \"1.4em\"\n        }\n\n        this.medias = {\n          em: {\n            xs: 0,  \n            sm: 48, \n            md: 64, \n            lg: 75\n          }, \n          px: {\n            xs: 0,  \n            sm: 768, \n            md: 1024, \n            lg: 5625\n          }\n        }\n\n        this.medias.query = {\n            onlySmall : `(max-width: ${this.medias.px.sm}px)`,\n            largerthansm : `(min-width: ${this.medias.px.sm+1}px)`,\n            mdandup : `(min-width: ${this.medias.px.md}px)`,\n            smallerthanmd : `(max-width: ${this.medias.px.md-1}px)`\n        }\n\n        this.padding = {\n            xs: 10,  \n            sm: 15, \n            md: 20, \n            lg: 30\n        };\n    }\n    \n    /**\n     * HELPERS\n     */\n    get defaultWrap(){\n        return `solid ${this.colors.primary} ${this.defaultWrapWidth}px`\n    }\n\n    get defaultFont(){\n        return `font-family : ${this.font}; font-size: ${this.sizes.normal};`\n    }\n\n    get styled(){\n        return styled;\n    }\n\n    responsive(pre, values, post){\n        return `\n            ${pre}: ${values.xs}${post};\n\n            @media only screen and (min-width: ${this.medias.px.sm}px) {\n                ${pre}: ${values.sm}${post};\n            }\n\n            @media only screen and (min-width: ${this.medias.px.md}px) {\n                ${pre}: ${values.md}${post};\n            }        \n\n            @media only screen and (min-width: ${this.medias.px.lg}px) {\n                ${pre}: ${values.lg}${post};\n            }        \n        `\n    }\n    \n    /**\n     * COMPONENTS\n     */\n    /**\n     * wrapping\n     */\n    get Wrapped(){\n        return ({children})=><EmptyDiv content={`border : ${this.defaultWrap}; background: white;`}>{children}</EmptyDiv>\n    }\n\n    get Container(){\n        return ({children})=><EmptyDiv content={this.responsive(\"padding\", this.padding, 'px')}>{children}</EmptyDiv>\n    }\n\n    get Empty(){\n        return ({children})=><EmptyDiv >{children}</EmptyDiv>\n    }\n\n    get Text(){\n        return ({children})=><EmptySpan content={this.defaultFont}>{children}</EmptySpan>\n    }\n\n    // get Container(){\n    //     return styled.div`\n    //         padding: ${this.padding}\n    //     `\n    // } \n\n    // test\n\n    // /**\n    //  * typography\n    //  */\n    // get Text(){\n    //     return styled.p`\n    //         ${this.defaultFont}\n    //     `\n    // }\n\n    get Title(){\n        // return ({children})=><EmptySpan content={this.defaultFont}>{children}</EmptySpan>\n        return styled.div`\n            ${this.defaultFont}\n            font-size: ${this.sizes.title}; \n            font-weight: bold;\n        `\n    }\n\n    get SubTitle(){\n        return styled(this.Title)`\n            font-size: ${this.sizes.subtitle}; \n        `\n    }\n\n    // /**\n    //  * grid\n    //  */\n    // get Grid(){\n    //     return styled(Grid_)`\n    //         margin: 0px;\n    //         padding: 0px;\n    //         width: 100%;\n    //     `\n    // }\n\n    // get Row(){return Row_};\n    // get Col(){return Col_};\n}\n\nconst Wrapped = styled.div`\n    border: ${props=>props.border}\n`\n\nconst EmptyDiv = styled.div`\n    ${props=>props.content}\n    \n`\n\nconst EmptySpan = styled.span`\n    ${props=>props.content}\n`\n\n\nexport default Theme;","export const ACTIONS = Object.freeze({\n    SET_CLIENT: Symbol(\"data/client\"),\n    SET_NAV_OPEN: Symbol('data/navopen'),\n    SET_THEME: Symbol('data/theme'),\n    SET_THEMES: Symbol('data/themes'),\n    SET_NEWS: Symbol('data/news'),\n    SET_EVENTS: Symbol('data/cal'),\n    SET_FAQS: Symbol('data/faq'),\n    SET_SENSOR_TYPES: Symbol('data/svt'),\n    SET_PLANT_CLUSTERS: Symbol('data/pc'),\n    SET_SOCKET: Symbol('socket'),\n    SET_GAME_SETTINGS: Symbol('gamesettings'),\n});\n\nconst initialState = {\n  client: null,\n  navopen: window.innerWidth > 768,\n  theme: null,\n  themes: null,\n  news: null,\n  events: null,\n  faqs: null,\n  sensorTypes: null,\n  plantClusters: null,\n  socket: null,\n  gameSettings: null,\n};\n\nexport default (state = initialState, action) => {\n  \n  switch (action.type) {\n    case ACTIONS.SET_SELECTED : {\n      return {\n        ...state,\n        selected: action.selected\n      }\n    }\n    case ACTIONS.SET_CLIENT: {\n      return {\n        ...state,\n        client: action.client\n      };\n    }\n    case ACTIONS.SET_SENSOR_TYPES: {\n      return {\n        ...state,\n        sensorTypes: action.sensorTypes\n      };\n    }\n    case ACTIONS.SET_GAME_SETTINGS: {\n      return {\n        ...state,\n        gameSettings: action.gameSettings\n      };\n    }\n    case ACTIONS.SET_SOCKET: {\n      return {\n        ...state,\n        socket: action.socket\n      };\n    }\n    case ACTIONS.SET_PLANT_CLUSTERS: {\n      return {\n        ...state,\n        plantClusters: action.plantClusters\n      };\n    }\n    case ACTIONS.SET_NEWS: {\n      return {\n        ...state,\n        news: action.news\n      };\n    }\n    case ACTIONS.SET_EVENTS: {\n      return {\n        ...state,\n        events: action.events\n      };\n    }\n    case ACTIONS.SET_NAV_OPEN: {\n      return {\n        ...state,\n        navopen: action.navopen\n      };\n    }\n    case ACTIONS.SET_THEME: {\n      return {\n        ...state,\n        theme: action.theme\n      };\n    }\n    case ACTIONS.SET_THEMES: {\n      return {\n        ...state,\n        themes: action.themes\n      };\n    }\n    default: {\n      return {\n        ...state\n      };\n    }\n  } \n};\n","import { combineReducers } from \"redux\";\nimport data from './reducers/DataReducer';\n\nconst rootReducer = combineReducers({\n  data\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport thunkMiddleware from \"redux-thunk\";\n\nimport rootReducer from \"./rootreducer\";\n\nconst middleware = applyMiddleware(thunkMiddleware);\n\nconst Store = createStore(rootReducer, middleware);\n\nexport default Store;\n","export const envi = ()=>{\n    const dev = (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\");\n    const status = (()=>{return `Running ${dev?'local':'server'}`})()\n    const printstatus = ()=>{\n        console.log(status);\n    }\n\n    if (dev){\n        document.title = \" (local) \" + document.title;\n    }\n    \n    return {\n        dev,\n        status,\n        printstatus\n    }   \n}\n\nexport default envi","import sanityClient from '@sanity/client'\nimport envi from './environment'\nimport {settings} from './connector_settings.json'\nimport { ACTIONS as DATA_ACTIONS } from \"../reducers/DataReducer\"\n// import toast from '../services/toast'\nimport imageUrlBuilder from '@sanity/image-url'\nimport { io } from \"socket.io-client\";\n\nconst prevFetched = {};\n\nexport const client = (dispatch, socket)=>{\n    const environment = envi();\n    let _ = settings;\n    let news = [];\n    // const sc = sanityClient({\n    //     projectId: _.projectId,\n    //     dataset: _.dataset,\n    //     token: _.token, // or leave blank to be anonymous user\n    //     ignoreBrowserTokenWarning: true,\n    //     useCdn: false\n    // })\n\n    // kick it\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\"){\n        socket = io(\"http://localhost:2200/\", { transports: [\"websocket\"] });\n    } else {\n        socket= io();\n    }\n    dispatch({type: DATA_ACTIONS.SET_SOCKET, socket});\n\n    socket.on(\"/gamesettings\", (gameSettings)=>{\n        dispatch({type: DATA_ACTIONS.SET_GAME_SETTINGS, gameSettings});\n      })\n    \n    socket.on(\"/sensortypes\", (sensorTypes)=>{\n        dispatch({type: DATA_ACTIONS.SET_SENSOR_TYPES, sensorTypes});\n    })\n\n    // socket.on(\"/updateSensors\", (plantClusters)=>{\n    //     dispatch({type: DATA_ACTIONS.SET_PLANT_CLUSTERS, plantClusters})\n    // });\n\n    // const fetch = (query)=>{\n    //     return new Promise((resolve, reject)=>{\n    //         if (prevFetched[query]){\n    //             if (environment.dev){\n    //                 console.log(\"reused cached query\");\n    //             }\n    //             resolve(prevFetched[query]);\n    //         } else {\n    //             sc.fetch(query)\n    //             .then((data)=>{\n    //                 prevFetched[query] = data;\n    //                 resolve(data);\n    //             }).catch(reject);\n    //         }\n    //     })\n    // }\n\n    // const builder = imageUrlBuilder(sc)\n\n    // const squareImage = (url, width)=>{\n    //     return builder.image(url).width(width).height(width).url();\n    // }\n\n    \n    // if (environment.dev){\n    //     environment.printstatus()\n    // } \n    // // title, description, \n    // fetch(\"*[_type == 'biomoddnews']{title, description, images[]{title, description, 'image':image.asset->url}} | order(_createdAt desc)\").then((news)=>{\n    //     dispatch({ type: DATA_ACTIONS.SET_NEWS, news});\n    // })\n\n    // fetch(\"*[_type == 'biomoddevent']{description, title, moment, available}|order(moment asc)\").then((events)=>{\n    //     dispatch({type: DATA_ACTIONS.SET_EVENTS, events});\n    // })\n\n    // fetch(\"*[_type == 'faq']{title, description}\").then((faqs)=>{\n    //     dispatch({type: DATA_ACTIONS.SET_FAQS, faqs})\n    // })\n\n    // return {\n    //     fetch,\n    //     environment,\n    //     squareImage\n    // }\n\n    return {\n        socket\n    }\n}\n\n\n\nexport default client;\n\n","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\n\n// const Input = ({label, value, setValue})=>{\n//     const theme = useSelector(state => state.data.theme);\n//     const [name, setName] = useState(\"\");\n    \n//     const handleSubmit = (evt) => {\n//         evt.preventDefault();\n//         alert(`Submitting Name ${name}`)\n//     }\n\n//     if (!theme){\n//         return null;\n//     } else {\n\n//     return (\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//             <theme.Text>\n//                 {label}&nbsp;&nbsp;\n//           </theme.Text>\n//           <input\n//             type=\"text\"\n//             value={value}\n//             onChange={e => setValue(e.target.value)}\n//           />\n//         </label>\n//       </form>\n//     );\n//     }\n// }\n\nexport function Input({label, setValue}) {\n    const [name, setName] = useState(\"\");\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        setValue(name);\n    }\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n            <code>\n                {label}&nbsp;\n          </code>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n        &nbsp;\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n\nexport default Input;","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Col, Row} from '../theme'\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../assets/logo.svg'\n\n\nconst Nav = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    \n\n    if (!theme ){\n        return null;\n    }\n\n    \n\n    return <Row center=\"xs\">\n\n\n        <Col xs={8} sm={2}>\n            <NavLink to=\"/\">\n            <img src={Logo} style={{width: \"100%\"}}/>\n            </NavLink>\n        </Col>\n        <Col xs={12} sm={10}>\n            <br/><br/>\n            <NavLink to=\"/\">\n            <theme.Text >\n              <span style={{color: \"white\", fontSize: \"4em\", fontWeight: \"bold\"}}>\n                  &nbsp;BIOMODD [BRG<sup>13</sup>]\n              </span>\n                \n            </theme.Text>\n            </NavLink>\n            <theme.Container>\n            <theme.Text>\n                <NavLink to=\"/gamelegacy\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> TEST GAME (legacy)\n                </NavLink>\n                <NavLink to=\"/server\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> TEST SERVER\n                </NavLink>\n                <NavLink to=\"/\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> HOME\n                </NavLink>\n            </theme.Text>\n            </theme.Container>\n            \n\n        </Col>\n\n       \n    </Row>\n\n}\n\nexport default Nav;\n\n\n{/* <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title>\n                    GoTo\n                </theme.Title>\n                <theme.Text>\n                  <ul>\n                    <li onClick={getScroller(newsref)}>\n                      -> news\n                    </li>\n                    <li onClick={getScroller(gameref)}>\n                      -> game\n                    </li>\n                    <li onClick={getScroller(restref)}>\n                      -> store and retrieve data (RESTful)\n                    </li>\n                    <li onClick={getScroller(socketref)}>\n                      -> store and retrieve data (WEBSOCKET)\n                    </li>\n                  </ul>\n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container> */}","// ===============================\n//      A U X\n// ===============================\nexport const getPointOnCircle = (p5, centrum, offset, division, section)=>{\n    let angle = ((2 * Math.PI) / division) * section;\n    let pos = p5.createVector(Math.cos(angle), Math.sin(angle));\n    pos.mult(offset);\n    pos.add(centrum);\n    return pos;\n}\n\n\n\nfunction sqr(x) { return x * x }\nfunction dist2(v, w) { return sqr(v.x - w.x) + sqr(v.y - w.y) }\nfunction distToSegmentSquared(p, v, w) {\n    var l2 = dist2(v, w);\n    if (l2 == 0) return dist2(p, v);\n    var t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;\n    t = Math.max(0, Math.min(1, t));\n    return dist2(p, { x: v.x + t * (w.x - v.x),\n        y: v.y + t * (w.y - v.y) });\n}\nexport const distToSegment = (p, v, w) =>{ return Math.sqrt(distToSegmentSquared(p, v, w)); }\n\n\n\n\nconst eps = 0.0000001;\nconst between = (a, b, c) => a - eps <= b && b <= c + eps;\n\nexport const segment_intersection = (x1, y1, x2,y2, x3, y3, x4, y4) => {\n\n\n    var x = ((x1*y2-y1*x2)*(x3-x4)-(x1-x2)*(x3*y4-y3*x4)) /\n        ((x1-x2)*(y3-y4)-(y1-y2)*(x3-x4));\n\n    var y = ((x1*y2-y1*x2)*(y3-y4)-(y1-y2)*(x3*y4-y3*x4)) /\n        ((x1-x2)*(y3-y4)-(y1-y2)*(x3-x4));\n\n    if(\n        (isNaN(x) || isNaN(y)) ||\n        (x1>=x2 && !between(x2, x, x1) || !between(x1, x, x2)) ||\n        (y1>=y2 && !between(y2, y, y1) || !between(y1, y, y2)) ||\n        (x3>=x4 && !between(x4, x, x3) || !between(x3, x, x4)) ||\n        (y3>=y4 && !between(y4, y, y3) || !between(y3, y, y4))\n    ) {\n        return false;\n    }\n\n    return true; //{x: x, y: y};\n\n};\n\n\n\nexport const mouseV = (p5)=>p5.createVector(p5.mouseX, p5.mouseY);","// ========================================\n//      I N T E R A C T I V E  O B J E C T\n// ========================================\n// an interactive object, that knows when clicked or dragged\n// currently assumes it is round\n\nexport const IO_STATE = Object.freeze({\n    UNSELECTED: \"unselected\",\n    CLICKED: \"clicked\",\n    HOVERING: \"hovering\",\n    DRAGGED: \"dragged\"\n})\n\nexport class InteractiveObject {\n    \n    constructor(location, size){\n        this.location = location;\n        this.size = size;\n        this.state = IO_STATE.UNSELECTED;\n        this.changed = false;\n        this.easing = 0.05;\n    }\n\n    easer = (target, value)=>{\n        const dx = target - value;\n        value += dx * this.easing;\n        return value;\n    }\n\n    checkChanged = ()=>{\n        const rv = this.changed;\n        this.changed = false;\n        return rv;\n    }\n\n    isOver(loc){\n        return loc.dist(this.location) < this.size/2;\n    }\n\n    isCurrentOver(p5){\n        return this.isOver(p5.createVector(p5.mouseX, p5.mouseY));\n    }\n\n    mousePressed(p5){\n        if (this.isCurrentOver(p5)){\n            this.state = IO_STATE.CLICKED;\n        }\n    }\n\n    mouseReleased(p5){\n        this.state = IO_STATE.UNSELECTED;\n        this.mouseMoved(p5);\n        this.changed = true;\n    }\n\n    mouseDragged(p5){\n        if (this.state !== IO_STATE.UNSELECTED){\n            this.state = IO_STATE.DRAGGED;\n        }   \n        this.changed = true;\n    }\n\n    mouseMoved(p5){\n        if (this.state === IO_STATE.UNSELECTED && this.isCurrentOver(p5)){\n            this.state = IO_STATE.HOVERING;\n        } else if (this.state === IO_STATE.HOVERING && !this.isCurrentOver(p5)){\n            this.state = IO_STATE.UNSELECTED;\n        }\n    }\n}","import {IO_STATE, InteractiveObject} from './interactiveObject.js'\n\nimport {distToSegment} from './auxi'\n\n// ===============================\n//      P L A N T\n// ===============================\n// Them plants\n\nclass Plant extends InteractiveObject {\n    constructor({location, size, color, alternativeColor, onClick}){\n        super(location, size);\n        this.color = color;\n        this.alternativeColor = alternativeColor;\n        this.collisionColor = 'red';\n        this.colorplaceholder = color;\n        this.onClick = onClick;\n        this.currentColors = {\n            red: false,\n            green: false,\n            blue: false\n        };\n    }\n\n    detectCollision(lights){\n        let col = false;\n        this.currenctColors = {\n            red: false,\n            green: false,\n            blue: false\n        };\n        for (let light of lights.values()) {\n            for (let j = 0; j < light.beam.segments.length; j++) {\n                var segment = light.beam.segments[j];\n\n                let line_v = {x: segment.p1_x, y: segment.p1_y};\n\n                let line_w = {x: segment.p2_x, y: segment.p2_y};\n\n                let point =  {x: this.location.x, y: this.location.y};\n                if (distToSegment(point, line_v, line_w) < this.size/2){   // collision\n                    col = true;\n                    this.currentColors[light.color] = true;\n                }\n            }\n        }\n        if (col) {\n            this.color = this.collisionColor;\n        } else {\n            this.color = this.colorplaceholder\n        }\n    }\n    draw(p5){\n        p5.noStroke();\n        if (this.state === IO_STATE.UNSELECTED || this.state === IO_STATE.HOVERING){\n            p5.fill(this.color);\n        } else {\n            if (this.state === IO_STATE.CLICKED ){\n                this.onClick();\n            }\n            p5.fill(this.alternativeColor);\n        }\n\n        let size = this.size;\n        if (this.state === IO_STATE.HOVERING){\n            size+=Math.sin(p5.millis())*5;\n        }\n        \n        p5.circle(this.location.x, this.location.y, size);\n    }\n}\n\nexport default Plant;","import {IO_STATE, InteractiveObject} from './interactiveObject'\nimport {mouseV} from './auxi'\n\n// the handle that allows for the rotation of the light\nclass Handle extends InteractiveObject {\n    constructor (location, size, circleSize, direction, color, strokeWeight){\n        super(location, size);\n        this.color = color;\n        this.strokeWeight = strokeWeight;\n\n        this.direction = direction;\n        this.circleSize = circleSize;\n        this.target = this.direction;\n    }\n\n    rotate(p5) {\n        // this should just update the direction, the rest will be handled by draw\n        let mousePos = mouseV(p5);\n        const diff = p5.createVector(0,0).set(this.location).sub(mousePos);\n        this.direction = p5.createVector(-diff.normalize().x, -diff.normalize().y);\n        this.target = this.direction;\n    }\n\n    // return the direction\n    // the object calling this might do something with the direction (eg: beam inverses the direction)\n    getDirection(p5) {\n        return this.direction;\n    }\n\n    // overwrite the function to detect hover based on the position of the handle\n    isOver(loc){\n        return  loc && this.handlePosition && loc.dist(this.handlePosition) < this.size/2;\n    }\n\n\n    draw(p5){\n        if(this.state === IO_STATE.DRAGGED){\n            this.rotate(p5);\n        }\n\n        if (this.target!==this.direction){\n            this.direction.x = this.easer(this.target.x, this.direction.x);\n            this.direction.y = this.easer(this.target.y, this.direction.y);\n        }\n\n        p5.strokeWeight(this.strokeWeight);\n        // draw the cirlce on which the handle moves\n        p5.noFill();\n        p5.stroke(this.color);\n        p5.circle(this.location.x, this.location.y, this.circleSize);\n        \n        let handleOffset = p5.createVector(this.direction.x, this.direction.y);\n        handleOffset.setMag(this.circleSize/2);\n\n        // calculate the handle position\n        this.handlePosition = p5.createVector(this.location.x, this.location.y).add(handleOffset);\n\n        // offset the handle in the direction needed:\n        // draw the handle\n        p5.noStroke();\n        p5.fill(this.color);\n        p5.circle(this.handlePosition.x, this.handlePosition.y, this.state===IO_STATE.UNSELECTED?this.size:this.size*1.2);\n    }\n\n}\n\nexport default Handle;\n","import {IO_STATE, InteractiveObject} from './interactiveObject'\nimport {mouseV} from './auxi'\nimport p5 from \"react-p5\"\nimport Handle from \"./handle.js\"\n\n\n// ===============================\n//      L I G H T\n// ===============================\n\n/* \n    Contains the objects: \n    - Segment:\n        Describes a segment on a beam of light, each segment is the result of a reflection off of a mirror\n    - Beam\n        Functionality of a full beam, this includes the ability to cast a beam in a direction and detect reflections\n    - Light:\n        Functionality of the full light, containing a beam, handle, and IO\n\n*/\n// The object that emits a beam of light\n\n\n\nclass Segment {\n    constructor(p1_x, p1_y, p2_x, p2_y, color, mirror){\n        this.p1_x = p1_x;\n        this.p1_y = p1_y;\n        this.p2_x = p2_x;\n        this.p2_y = p2_y;\n        this.color = color;\n        this.mirror = mirror;\n    }\n}\n\n\nclass Beam {\n\n    constructor(origin, direction, color, mirrors, p5){\n        this.origin = origin;\n        this.direction = direction;\n        this.color = color;\n        this.segments = [];\n        this.mirrors = mirrors;\n\n        // array to keep track of calculated intersection points\n        // this is mostly for debugging\n        this.intersectPoints = [];\n    }\n\n    setDirection(direction, p5){\n        this.direction = direction;\n        //this.createSegmentZero(p5);\n        //this.segments[0].direction = direction;\n    }\n\n\n    /* New function to cast a beam: \n    takes point of origin and direction\n    this function creates a beam and then checks if it reflects off a mirror (another new function);\n    on reflection it will create a segment, add it to the array and cast a new beam from the reflection point\n    */\n    cast(direction, startPoint, p5, cnt, mirror){\n        // draw from point of origin in direction\n        const beam = p5.createVector(startPoint).set(direction);\n        // set the beam length to the diagonal of the sketch so it always reaches the end of the screen\n        beam.setMag(Math.sqrt(Math.pow(p5.width, 2)+Math.pow(p5.height, 2)));\n        beam.add(startPoint);\n        \n        // check beam for reflection (function)\n        let reflectionData = this.reflect(startPoint, beam, direction, p5, mirror);\n        if(reflectionData!==false) {\n            // create segment and add to segments array\n            this.segments.push(new Segment(startPoint.x, startPoint.y, reflectionData.x, reflectionData.y, this.color, mirror));\n            // cast new beam from reflectionpoint\n            let reflectionStart = p5.createVector(reflectionData.x, reflectionData.y);\n            // keep counter to stop excessive recursion\n            cnt++;\n            if(cnt<1000){\n                this.cast(reflectionData.direction, reflectionStart, p5, cnt, reflectionData.mirror);\n            }\n        } else {\n            // no reflection has been detected\n            this.segments.push(new Segment(startPoint.x, startPoint.y, beam.x, beam.y, this.color, mirror));\n        }\n    }\n\n\n\n    reflect(beamStart, beamEnd, direction, p5, mirror){\n\n        let intersectionPoints = [];\n\n        // loop through mirrors\n        for(let i=0; i<this.mirrors.length; i++) {\n            let mirrorStart = this.mirrors[i].getPoints(p5)[0];\n            let mirrorEnd = this.mirrors[i].getPoints(p5)[1];\n\n            //if(this.mirrors[i].id == \"mirror_0\") console.log(\"x3: \"+ mirrorStart.x + \", y3: \"+ mirrorStart.y + \" | x4: \"+ mirrorEnd.x + \", y4: \"+ mirrorEnd.y);\n\n            // find the intersection \n            // see algorithm at https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line_segment\n            let t = ((mirrorEnd.x - mirrorStart.x) * (beamStart.y - mirrorStart.y) - (mirrorEnd.y - mirrorStart.y) * (beamStart.x - mirrorStart.x)) / ((mirrorEnd.y - mirrorStart.y) * (beamEnd.x - beamStart.x) - (mirrorEnd.x - mirrorStart.x) * (beamEnd.y - beamStart.y));\n            let u = ((beamEnd.x - beamStart.x) * (beamStart.y - mirrorStart.y) - (beamEnd.y - beamStart.y) * (beamStart.x - mirrorStart.x)) / ((mirrorEnd.y - mirrorStart.y) * (beamEnd.x - beamStart.x) - (mirrorEnd.x - mirrorStart.x) * (beamEnd.y - beamStart.y));\n\n            // check t & u to see if intersection is found\n            if((t>=0 && t<=1) && (u>=0 && u<=1)) {\n                // calculate intersectionpoint x & y, and the distance to the startpoint\n                let x = beamStart.x + t * (beamEnd.x - beamStart.x);\n                let y = beamStart.y + t * (beamEnd.y - beamStart.y);\n                let distance = p5.dist(beamStart.x, beamStart.y, x, y);\n                // save for later\n                if(this.mirrors[i].ID!=mirror) {\n                    let reflectionNormal = this.mirrors[i].getReflection(p5);\n                    intersectionPoints.push({x: x, y: y, distance: distance, mirror: this.mirrors[i].ID, direction: 0, reflectionNormal: reflectionNormal});\n                }\n            }\n            \n        }\n\n        // exit if no points have been found\n        if(intersectionPoints.length===0) {\n            return false;\n        } else {\n            let intersectionPoint = {};\n            // sort the found intersectionpoints by distance\n            if(intersectionPoints.length==1) {\n                // check if the one hit has a distance of 0\n                // this means it is a beam that has already reflected and does not hit anything else other than the starting mirror\n                if(intersectionPoints[0].distance==0) {\n                    console.log(\"no reflection except itself\");\n                    return false;\n                } else {\n                    intersectionPoint = intersectionPoints[0];\n                }\n            }  else {\n                // sort if there is more than one reflection point\n                intersectionPoints.sort((a,b) => (a.distance > b.distance) ? 1 : -1);\n\n                // check if the first hit has a distance of 0 (hit on the mirror from which a beam starts)\n                if(intersectionPoints[0].distance==0) {\n                    // skip the hit with distance 0\n                    intersectionPoint = intersectionPoints[1];\n                } else {\n                    intersectionPoint = intersectionPoints[0];\n                }\n                \n            }\n            \n            // calculate angle using P5 reflect function\n            let normDirection = p5.createVector(direction.x, direction.y);\n            let reflectVector = p5.createVector(intersectionPoint.reflectionNormal.x, intersectionPoint.reflectionNormal.y);\n            normDirection.reflect(reflectVector);\n            intersectionPoint.direction = normDirection;\n\n            // add to array and return\n            this.intersectPoints.push(intersectionPoint);\n            return intersectionPoint;\n        }\n        \n    }\n    \n\n    draw(p5, direction) {\n        \n        // reset segments\n        this.segments = [];\n        // debug: points of intersection\n        this.intersectPoints = [];\n        // cast first beam (this starts the population of the segments array)\n        this.cast(p5.createVector(-direction.x, -direction.y), this.origin, p5, 0, null);\n        \n        // this debug flag shows or hide the dots that indicate intersection points on the beam\n        let debug = true;\n        if(debug){\n            if(this.intersectPoints.length>0) {\n                // console.log(\"Number of intersection points: \"+ this.intersectPoints.length);\n                for(let j=0; j<this.intersectPoints.length; j++) {\n                    // console.log(this.intersectPoints[j].distance);\n                    p5.circle(this.intersectPoints[j].x, this.intersectPoints[j].y, 10);\n                }\n            }\n        }\n        \n        p5.noFill();\n\n        // loop through and draw segments\n        for (let i=0; i<this.segments.length; i++){\n            //console.log(this.segments[i].mirror);\n            p5.stroke(this.segments[i].color);\n            p5.line(this.segments[i].p1_x, this.segments[i].p1_y, this.segments[i].p2_x, this.segments[i].p2_y);\n        }\n    }\n    \n}\n\n\n\nclass Light extends InteractiveObject {\n    constructor({color, size, location, controlOffset, hide, strokeWeight, player}, mirrors, p5){\n        super(location, size);\n        this.color = color;\n        this.controlOffset = controlOffset;\n        this.strokeWeight = strokeWeight;\n        this.player = player;\n        this.hide = hide;\n\n        \n         \n        // set random direction (direction needs to come from biomodd server) and create handle\n        let randDirection = p5.createVector(p5.random(-1, 1), p5.random(-1, 1));\n        this.handle = new Handle(this.location, 10, 50, randDirection, this.color, this.strokeWeight);\n\n        // create the beam with the direction from the handle\n        this.beam = new Beam(this.location, p5.createVector(-this.handle.getDirection(p5).x, -this.handle.getDirection(p5).y), color, mirrors, p5);        \n    }\n\n    iPlay(){\n        return this.player == this.color;\n    }\n\n    draw(p5){\n\n        if (this.hide){\n            return;\n        }\n\n        // draw circle for the light\n        p5.noStroke();\n        if (this.iPlay()){\n            p5.fill(this.color);\n        } \n        p5.circle(this.location.x, this.location.y, this.size);\n        p5.noFill();\n\n        // draw handle\n        this.handle.draw(p5);\n\n        // draw beam\n        this.beam.draw(p5, this.handle.getDirection(p5));\n    }\n\n    // ---- I/O stuff \n    // passing interactions down to the handle member\n    mousePressed(p5){\n        if (this.iPlay()){\n            super.mousePressed(p5);\n            this.handle.mousePressed(p5);\n        }\n    }\n\n    mouseReleased(p5){\n        if (this.iPlay()){\n            super.mouseReleased(p5);\n            this.handle.mouseReleased(p5);\n        }\n    }\n\n    mouseDragged(p5){\n        if (this.iPlay()){\n            super.mouseDragged(p5);\n            this.handle.mouseDragged(p5);\n        }\n    }\n\n    mouseMoved(p5){\n        if (this.iPlay()){\n            super.mouseMoved(p5);\n            this.handle.mouseMoved(p5);\n        }\n    }    \n}\n\nexport default Light;","import {InteractiveObject, IO_STATE} from './interactiveObject.js'\nimport Handle from \"./handle.js\"\nimport {segment_intersection} from \"./auxi\";\n\n\nclass Mirror extends InteractiveObject {\n    constructor({location, size, color, alternativeColor, direction, ID, onClick, player}, p5){\n        super(location, size);\n        this.color = color;\n        this.alternativeColor = alternativeColor;\n        this.rotation = 0;\n        this.strokeWeight = 5;\n        this.player = player;\n        this.ID = ID;\n        // store mirror id, as it can help with debugging\n        // this.id = \"mirror_\"+id;\n\n        \n        // generate a random direction and create the handle\n        let randDirection = p5.createVector(p5.random(-1, 1), p5.random(-1, 1));\n        this.handle = new Handle(this.location, 10, 25, randDirection, this.color, 2);\n\n        // store the normalized vectors used to calculate reflection angles\n        this.reflectionNormals = [null, null];\n        this.onClick = onClick;\n\n        this.tester = new InteractiveObject(this.location, this.size/3);\n    }\n\n    // gets the start and end coordinates of the mirror\n    // returns an array of length 2, with each element being an object containing an x & y value\n    getPoints(p5){\n        // calculate the start and end point of the mirror\n        // adjust vector based on the direction set by the handle\n        let adjustV = this.handle.getDirection(p5).setMag(this.size/2);\n        let adjust = p5.createVector(adjustV.x, adjustV.y).rotate(Math.PI/2);\n\n        // startpoint of mirror\n        let startPoint = p5.createVector(this.location.x, this.location.y);\n        startPoint.add(p5.createVector(-adjust.x, -adjust.y));\n        // endpoint\n        let endPoint = p5.createVector(this.location.x, this.location.y);\n        endPoint.add(adjust);\n        \n        return [{x: startPoint.x, y: startPoint.y}, {x: endPoint.x, y: endPoint.y}];\n    }\n\n    setNormalizedLocation(x, y, p5){\n        let tx = x * p5.width;\n        let ty = y * p5.height;\n        this.tester.location = p5.createVector(tx, ty);\n    }\n\n\n    // gets the point of reflection from light.beam and calculates the normalized vector around which to reflect the beam\n    getReflection(p5){\n        // return the direction vector\n        return p5.createVector(this.handle.direction.x, this.handle.direction.y);\n    }\n\n    // is a given coordinate (loc) over this mirror?\n    isOver(loc){\n        // needs to be rewritten!\n        let x = loc.x;\n        let y = loc.y;\n        return this.location.x <= x && x <= this.location.x + this.strokeWeight &&\n            this.location.y <= y && y <= this.location.y + this.size;\n    }\n\n   draw(p5){       \n        this.location.x = this.easer(this.tester.location.x, this.location.x)\n        this.location.y = this.easer(this.tester.location.y, this.location.y)\n        this.handle.location = this.location;\n        p5.strokeWeight(this.strokeWeight);\n        p5.stroke(this.color);\n\n        let size = this.size;\n        if (this.state === IO_STATE.HOVERING){\n            size+=Math.sin(p5.millis())*2;\n        }\n\n        if (this.state === IO_STATE.CLICKED){\n            this.onClick();\n        }\n       \n        // draw the line\n        let linePoints = this.getPoints(p5);\n        p5.line(linePoints[0].x, linePoints[0].y, linePoints[1].x, linePoints[1].y);\n\n        // draw the handle\n        this.handle.draw(p5);\n\n        // debug: show reflection normals\n        let debug = false;\n        if(debug) {\n            p5.stroke(\"rgba(0, 255, 255, 1)\");\n            for(let i=0; i<this.reflectionNormals.length; i++) {\n                if(this.reflectionNormals[i]!=null) {\n                    p5.line(this.reflectionNormals[i].origin.x, this.reflectionNormals[i].origin.y, this.reflectionNormals[i].vector.x, this.reflectionNormals[i].vector.y);\n                }\n            }\n        }\n\n        if (this.tester.state == IO_STATE.DRAGGED){\n            this.tester.location = p5.createVector(p5.mouseX, p5.mouseY);\n            this.location = p5.createVector(p5.mouseX, p5.mouseY);\n            this.handle.location = p5.createVector(p5.mouseX, p5.mouseY);\n            this.changed = true;\n        }\n\n        if (this.tester.state == IO_STATE.CLICKED){\n            this.onClick();\n        }\n\n    }\n\n    rotate(degrees){\n        this.handle.direction.rotate(degrees)\n        this.changed = true;\n        this.handle.changed = true;\n    }\n\n    iPlayer(){\n        return ((this.player == this.color)||(this.player == this.color+\"s\"))\n    }\n    \n\n    // ---- I/O stuff \n    // passing interactions down to the handle member\n    mousePressed(p5){\n        // super.mousePressed(p5);\n        // console.log(this.player, this.color);\n        // super.mousePressed(p5);\n        if (this.iPlayer()){\n            this.handle.mousePressed(p5);\n            this.tester.mousePressed(p5);\n        }\n    }\n\n    mouseReleased(p5){\n        // super.mouseReleased(p5);\n        if (this.iPlayer()){\n            this.handle.mouseReleased(p5);\n            this.changed = true;\n            this.tester.mouseReleased(p5);\n        }\n    }\n\n    mouseDragged(p5){\n        if (this.iPlayer){\n            this.tester.mouseDragged(p5);\n            this.handle.mouseDragged(p5);\n        }\n    }\n\n    mouseMoved(p5){\n        if (this.iPlayer()){\n            this.tester.mouseMoved(p5);\n            this.handle.mouseMoved(p5);\n        }\n    }    \n}\n\nexport default Mirror;","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport {getPointOnCircle} from './auxi'\nimport Plant from './plant'\nimport Light from './light'\nimport Mirror from \"./mirror\";\nimport { IO_STATE } from \"./interactiveObject\";\nimport { ACTIONS as DATA_ACTIONS } from \"../../reducers/DataReducer\"\n\n// ===============================\n// ===============================\n//      G A M E\n// ===============================\n// ===============================\nexport default ({socket, player, players, safeDistance, scoreUpdate}) => {\n\n    // enumerations\n\n    // globals\n    const lights        = new Map();\n    const plants        = [];\n    const mirrors        = [];\n\n    // -- keep track of all objects we want to draw \n    // --- expects they implemented a draw(p5) method\n    const toDraw        = [];\n\n    // -- keep track of all objects we want to interact with \n    // --- expects they implemented all interactive methods as defined in the InteractiveObject class\n    const toInteract    = [];\n\n    const settings = {\n        background: \"black\"\n    }\n\n    const lightSettings = {\n        size: 30, \n        controlOffset: 20,\n        offset: .4,\n        strokeWeight: 2\n    };\n\n    const plantSettings = {\n        amount: 1,\n        size: 40,\n        color: \"white\",\n        alternativeColor: \"lightgreen\"\n    }\n\n    const mirrorSettings = {\n        size: 50,\n        alternativeColor: \"0f0\"\n    }\n    \n    // ===============================\n    //      A U X\n    // ===============================\n    const getCenter = (p5)=>{\n        return p5.createVector(p5.width*.5, p5.height*.5);\n    }\n\n    // const getRandomPoint = (p5)=> p5.createVector(Math.random()*p5.width, Math.random()*p5.height);\n    \n    // ===============================\n    //      S E T U P\n    // =============================== \n\tconst setup = (p5, canvasParentRef) => {\n        console.log(\"game started\")\n        // setup canvas\n        if (canvasParentRef && canvasParentRef.offsetWidth){\n            console.log(canvasParentRef.offsetWidth)\n            p5.createCanvas(canvasParentRef.offsetWidth, window.screen.height).parent(canvasParentRef);\n        } else {\n            throw \"canvas not found\"\n        }\n\n        // setup sockets\n        socket.on(\"/gameUpdate\", (gameUpdate)=>{\n            const colors = [\"red\", \"green\", \"blue\"];\n            if (plants.length){\n                // update location\n\n            } else {\n                //  instantiate \n                gameUpdate.plants.forEach((p, i, arr)=>{\n                    plants[i] = new Plant({location: p5.createVector(p.x*p5.width, p.y*p5.height), ID: p.ID,\n                        onClick: ()=>{\n                            socket.emit(\"/selected\", {type: \"plant\", index: i});\n                        },...plantSettings});\n                    toDraw.push(plants[i]);\n                    toInteract.push(plants[i]);\n                });\n            }\n\n            if (mirrors.length){\n                // update\n                mirrors.forEach((mirror, i)=>{\n                    if (mirror && mirror.state == IO_STATE.UNSELECTED && mirror.handle.state == IO_STATE.UNSELECTED && gameUpdate.mirrors[i]){\n                        const newmirror = gameUpdate.mirrors[i];\n                        mirror.handle.target = p5.createVector(newmirror.rx, newmirror.ry);\n                        mirror.setNormalizedLocation(newmirror.x, newmirror.y, p5);\n                    }\n                })\n            } else {\n                gameUpdate.mirrors.forEach((m, i, arr)=>{\n                    mirrors[i] = new Mirror({location: p5.createVector(m.x*p5.width, m.y*p5.height), player, color: m.player, ID: m.ID || Math.random(),\n                        onClick: ()=>{\n                            socket.emit(\"/selected\", {type: \"mirror\", index: i});\n                        },\n                        ...mirrorSettings}, p5);\n                    const dir = p5.createVector(m.rx, m.ry);\n                    mirrors[i].handle.direction  = dir;\n                    mirrors[i].handle.target = dir;\n                    toDraw.push(mirrors[i]);\n                    toInteract.push(mirrors[i]);\n                });\n\n                colors.forEach((color, i)=>{\n                    \n                        lights.set(color, new Light(\n                            {\n                                color, \n                                player,\n                                hide: !players[color],\n                                location: getPointOnCircle(p5, getCenter(p5), p5.width*lightSettings.offset, 3, i),\n                                ...lightSettings\n                        }, mirrors, p5));\n                        toDraw.push(lights.get(color));\n                        toInteract.push(lights.get(color));\n                    \n                })\n            }\n\n            if (lights){\n                // update lights position\n                colors.forEach(c=>{\n                    const l = lights.get(c);\n                    if (l && l.state == IO_STATE.UNSELECTED){\n                        l.handle.target = p5.createVector(gameUpdate[c].x,gameUpdate[c].y);\n                    }\n                })\n            }\n        })\n\n        socket.on(\"/rotateMirror\", ({index, value})=>{\n            if (index && value){\n                mirrors[index].rotate(value);\n            }\n        });\n\n        socket.on(\"/moveMirror\", ({index, value})=>{\n            if (index && value){\n                mirrors[index].location.x += value.x || 0;\n                mirrors[index].location.y += value.y || 0;\n            }\n        })\n\t};\n\n\n    // ===============================\n    //      D R A W\n    // =============================== \n\tconst draw = (p5) => {\n\t\tp5.background(settings.background);\n        \n        toDraw.forEach(td=>td.draw(p5));\n        plants.forEach(mr=>mr.detectCollision(lights));\n\n        [\"red\", \"green\", \"blue\"].forEach(c=>{\n            const l = lights.get(c);\n            if (l && l.handle.checkChanged()){\n                socket.emit(\"/updateLight\", {color: c, rotation: {\n                    x: l.handle.target.x,\n                    y: l.handle.target.y\n                }})\n            }\n        })\n\n        mirrors.forEach((mirror, index)=>{\n            if (mirror && mirror.handle.checkChanged() || mirror.checkChanged()){\n                socket.emit(\"/updateMirror\", \n                    {\n                        index,\n                        x: mirror.location.x / p5.width,\n                        y: mirror.location.y / p5.height,\n                        rx : mirror.handle.target.x,\n                        ry : mirror.handle.target.y\n                    }\n                )\n            }\n        })\n\n\n        if (p5.frameCount%scoreUpdate == 0){\n            let score = 0;\n\n            socket.emit(\"/giveGameUpdate\");\n            if (plants && plants[0]){\n                socket.emit(\"/lights\", plants.map((p, index)=>{\n                    if (p.currentColors[player]){\n                        score++;\n                    }\n\n                    const colors = {\n                        red: p.currentColors.red,\n                        green: p.currentColors.green,\n                        blue: p.currentColors.blue\n                    }\n\n                    p.currentColors = {\n                        red: false,\n                        green: false,\n                        blue: false\n                    };\n                    return {\n                    index,\n                    colors\n                }}))\n            }\n\n\n\n            socket.emit(\"/score\", {player, score})\n\n        }\n\t};\n\n    // ===============================\n    //      I / O\n    // =============================== \n\tconst mousePressed = (p5)=>{\n        toInteract.forEach(ti=>ti.mousePressed(p5));\n\t}\n\n    const mouseReleased = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseReleased(p5));\n    }\n\n    const mouseDragged = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseDragged(p5));\n    }\n\n    const mouseMoved = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseMoved(p5));\n    }\n\n\treturn <Sketch  setup={setup} \n                    draw={draw} \n                    mousePressed={mousePressed} \n                    mouseReleased={mouseReleased} \n                    mouseDragged={mouseDragged}\n                    mouseMoved={mouseMoved}\n                    \n                    />;\n};\n","import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nconst SensorType = ({name, description})=>{\n    const [open, setOpen] = useState(false);\n\n    const toggle = ()=>{\n        setOpen(!open);\n    }\n\n    return <div >\n\n            {open?<br/>:null}\n        \n            <span>\n            --->&nbsp;\n            </span>\n            <span className=\"hoverer\" onClick={toggle}>\n                [{name}] {open?<span>[X]</span>:null}\n            </span>\n        \n        <br/>\n        {open?\n        <div className=\"indenter\" >\n            {description}\n            <br/><br/>\n        </div> : null}\n    </div>\n\n}\n\nconst SensorTypes = ()=>{\n    const sensorTypes = useSelector(state => state.data.sensorTypes)\n    const [open, setOpen] = useState(false);\n\n    const toggle = ()=>{\n        setOpen(!open);\n    }\n\n    if (!sensorTypes){\n        return null;\n    }\n\n    return <div>\n        <span >\n            --> <span className=\"hoverer\" onClick={toggle}>  SENSORTYPES   {open?<span>[X]</span>:null}</span>\n        </span>\n        \n        {open?sensorTypes.map(st=><SensorType key={st.name} name={st.name} description={st.description} />):null}\n    </div>\n\n    \n}\n\nexport default SensorTypes;","import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nconst Sensor = ({type, value})=>{\n    const [history, setHistory] = useState([]);\n\n    useEffect(()=>{\n\n    })\n\n    return <div className=\"indenter\">\n        {type} - {value}\n    </div>\n\n}\n\nexport const Plant = ({name, sensors, init})=>{\n    const [open, setOpen] = useState(init);\n\n    const toggle = ()=>{\n        setOpen(!open);\n    }\n\n    return <div >\n\n            {open?<br/>:null}\n        \n            <span>\n            --->&nbsp;\n            </span>\n            <span className=\"hoverer\" onClick={toggle}>\n                [{name}] {open?<span>[X]</span>:null}\n            </span>\n        \n        <br/>\n        {open?\n        <div className=\"indenter\" >\n            {sensors.map((s, i)=><Sensor key={\"sensor\"+i} type={s.type} value={s.value} />)}\n            <br/><br/>\n        </div> : null}\n    </div>\n\n}\n\nconst Plants = (plantClusters)=>{\n    const [open, setOpen] = useState(false);\n\n\n    const toggle = ()=>{\n        setOpen(!open);\n    }\n\n    \n\n    useEffect(()=>{\n        \n    })\n\n    if (!plantClusters){\n        return null;\n    }\n\n    return <div>\n        <span >\n            --> <span className=\"hoverer\" onClick={toggle}>  PLANTS   {open?<span>[X]</span>:null}</span>\n        </span>\n        \n        {open?plantClusters.plantClusters.map(p=><Plant key={p.name} name={p.name} sensors={p.sensors} />):null}\n    </div>\n\n    \n}\n\nexport default Plants;","import React, {useState, useEffect} from \"react\";\n\nconst Countdown = ({target, displaytext, endText})=>{\n    const [rt, setrt] = useState(null);\n    const [count, setCount] = useState(0);\n  \n    const secondsToTarget = ()=>{\n      if (rt){\n        return Math.floor(Math.abs((new Date().getTime() - rt.getTime()) / 1000));\n      } else {\n        return null;\n      }\n    }\n  \n    useEffect(()=>{\n      let int = null;\n  \n      if (target !== rt){\n        setrt(target);\n        setCount(null);\n      }\n  \n      if (rt){\n        int = setInterval(()=>{\n          setCount(secondsToTarget());\n        }, 500);\n      }\n  \n      return ()=>{\n        if(int){\n          clearInterval(int)\n        }\n      }\n    })\n  \n    if (!target || !rt || !count){\n      return null;\n    } else if (count && count > 0){\n      return <div>\n        {displaytext}: {count}\n      </div>\n    } else {\n      return <div> {endText} </div>\n    } \n  }\n\nexport default Countdown;","import React, {useEffect, useState} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Grid, Col, Row, Theme} from '../theme'\nimport SensorTypes from './sensorTypes';\nimport Plants, {Plant} from './plants';\nimport Countdown from './countdown';\n\nconst Controller = ({phase, phases, target, player})=>{\n    const [theme, socket, client, gameSettings, sensorTypes] = useSelector(state => \n        [ state.data.theme, \n          state.data.socket, \n          state.data.client, \n          state.data.gameSettings,\n          state.data.sensorTypes,\n        ]);\n    const [plantClusters, setPlantClusters] = useState(null);\n    const [selected, setSelected] = useState(null);\n    const [score, setScore] = useState(null);\n    const [highScore, setHighScore] = useState(null);\n    const ROT = 3;\n    const TRA = 10;\n\n    useEffect(()=>{\n        if (socket){\n            socket.on(\"/selected_\", (selector)=>{\n                setSelected(selector);\n            })\n\n            socket.on(\"/updateSensors\", (plantClusters)=>{\n                setPlantClusters(plantClusters);\n            });\n\n            socket.on(\"/score_\", (score_)=>{\n                setScore(score_)\n            })\n\n            socket.on(\"/highscore\", (highscore_)=>{\n                setHighScore(highscore_);\n                console.log(highscore_);\n            })\n        }\n\n        return ()=>{\n            socket.off(\"/selected_\");\n            socket.off(\"/updateSensors\");\n            socket.off(\"/score_\");\n            socket.off(\"/highscore\");\n        }\n    })\n\n    \n    if (!theme || !client || !gameSettings || !socket || !sensorTypes || !plantClusters){\n        return null;\n    }  \n\n    const getSelected = ()=>{\n        if (selected && selected.type){\n            switch (selected.type){\n                case \"plant\":\n                    return <div> <br/>\n                        -> Selection <br/>\n                        {\n                            (()=>{\n                                const p = plantClusters[selected.index];\n                                return <Plant init={true} key={p.name} name={p.name} sensors={p.sensors} />\n                            })()\n                        }\n                        --------------------- <br/><br/>\n                    </div>\n                case \"mirror\":\n                    const getVal = (value)=>{\n                        return {index: selected.index, value}\n                    }\n                    return <div>\n                        -> Mirror selected: [{selected.index}] <br/><br/>\n                                <table>\n                                    <tbody>\n                                    <tr >\n                                        <td  onClick={()=>{\n                                            socket.emit(\"/rotateMirror_\", getVal(ROT));\n                                        }}>\n                                            TURN LEFT\n                                        </td>\n                                        <td onClick={()=>{\n                                            socket.emit(\"/rotateMirror_\", getVal(-ROT));\n                                        }}>\n                                            TURN RIGHT\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td onClick={()=>{\n                                            socket.emit(\"/moveMirror_\", getVal({y: -TRA}));\n                                        }}>\n                                            GO UP\n                                        </td>\n                                        <td onClick={()=>{\n                                            socket.emit(\"/moveMirror_\", getVal({y: TRA}));\n                                        }}>\n                                            GO DOWN\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td onClick={()=>{\n                                            socket.emit(\"/moveMirror_\", getVal({x: -TRA}));\n                                        }}>\n                                            GO LEFT\n                                        </td>\n                                        <td onClick={()=>{\n                                            socket.emit(\"/moveMirror_\", getVal({x: TRA}));\n                                        }}>\n                                            GO RIGHT\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                                <br/><br/><br/>\n                    </div>\n                default:\n                    return \"wrong selection\"\n            }\n        } else {\n            return null;\n        }\n    }\n\n    return <div>\n                <br/>\n                <p>\n                    ||==================================||\n                        &nbsp;&nbsp;&nbsp; BIOMODD [BRG<sup>13</sup>] SPECTRUM\n                    ||==================================||\n                </p>\n                \n                <div> \n                    GameStatus = {phase} \n                </div>\n\n                {getSelected()}\n\n                <div>\n                    {player? <span>PlayerColor = {player} </span> : null}\n                </div>\n                <div>\n                    {(target && phase == phases.RUNNING)? <span> \n                        <Countdown target={target} displaytext={\"Time remaining\"} endText={\"THE END\"} /> <br/>\n                        </span> : null}\n                </div>\n\n                <br/>\n\n                <div>\n                {score?<div>\n                            -- SCORE <br/>\n                            RED: {score.red} <br/>\n                            GREEN: {score.green} <br/>\n                            BLUE: {score.blue} <br/>\n                            TOTAL: {score.red+score.green+score.blue}\n                        </div>:null}\n                {highScore?<div>\n                    HIGHSCORE_INDIVIDUAL: {highScore.HS1} <br />\n                    HIGHSCORE_TOTAL: {highScore.HSA} <br />\n                </div>:null}\n\n                </div>\n                \n\n                <SensorTypes />\n                <Plants plantClusters={plantClusters} />\n                {/* {sensorTypes.map(st=><div>\n                    {st.name}\n                </div>)} */}\n\n    </div>;\n}\n\nexport default Controller;","import React from 'react'\n\nconst Score = ({socket})=>{\n    return \"i will be score\";\n}\n\nexport default Score;","import React from 'react';\nimport Countdown from './countdown';\n\nconst LoaderScreen = ({player, players, socket, setPlayer, target})=>{\n\n\n    const MakePlayer = (color)=>{\n\n        const killed = <div className=\"kill\" >\n          [PLAY {color.toUpperCase()}]\n        </div>;\n  \n        const selected = <div>\n          [{color.toUpperCase()} SELECTED]\n        </div>;\n  \n        if (player){\n          if (player == color){\n            return selected;\n          } else if (player == color+\"s\"){\n              return selected;\n          } else {\n            return killed;\n          }\n        }\n  \n        if (players[color] && players[color+\"s\"]){\n          return killed;\n        } else if (players[color]){\n          return <div className=\"hoverer\" onClick={()=>{\n            if (!player){\n              socket.emit(\"/startgame\", color+\"s\");\n              setPlayer(color+\"s\");\n            }\n          }}>\n            [PLAY {color.toUpperCase()} support]\n          </div>\n        } else {\n          return <div className=\"hoverer\" onClick={()=>{\n            if (!player){\n              socket.emit(\"/startgame\", color);\n              setPlayer(color)\n            }\n          }}>\n            [PLAY {color.toUpperCase()}]\n          </div>\n        }\n      }\n\n    \n      \n    return <div style={{color: \"white\"}}>\n            <div style={{color: \"white\", width: \"100%\", textAlign:\"center\"}}>\n              <br/><br/><br/>\n              || ==== LOAD NEW GAME ==== ||\n              <br/><br/>\n  \n              <div >\n                {MakePlayer(\"red\")}\n                {MakePlayer(\"green\")}\n                {MakePlayer(\"blue\")}\n              </div>\n  \n              <br/><br/><br/>\n              <Countdown target={target} displaytext={\"Time before launch\"} endText=\"LETS GO\"/>\n            </div>\n    </div> \n}\n\nexport default LoaderScreen;","import React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Col, Row} from '../theme'\nimport Spectrum from '../components/spectrum'\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport Controller from './controller'\nimport Score from './score';\nimport LoaderScreen from './LoaderScreen';\nimport { ACTIONS as DATA_ACTIONS } from \"../reducers/DataReducer\"\n\nconst Game = ()=>{\n\n    const PHASES = Object.freeze({\n      LOAD: \"load\",\n      RUNNING: \"running\",\n      END: \"ended\"\n    });\n\n    const [theme, socket, client, gameSettings, plantClusters, sensorTypes] = useSelector(state => \n      [ state.data.theme, \n        state.data.socket, \n        state.data.client, \n        state.data.gameSettings,\n        state.data.plantClusters,\n        state.data.sensorTypes\n      ]);\n    const [start, setStart] = useState(null);\n    const [phase, setPhase] = useState(PHASES.END);\n    const [players, setPlayers] = useState(null);\n    const [player, setPlayer] = useState(null);\n    const [target, setTarget] = useState(null);\n    const [listeners, setListeners] = useState(null);\n    const dispatch = useDispatch();\n    const handle = useFullScreenHandle();\n\n    const gamewidth = 9;\n    \n    const setTargetFromDate = (seconds)=>{\n      const d = new Date();\n      d.setSeconds( d.getSeconds() + seconds);\n      setTarget(d)\n    }\n\n    useEffect(()=>{\n      if (socket){\n        setListeners(true);\n        socket.on(\"/phase\", (newphase)=>{\n          setPhase(newphase);\n          switch(newphase){\n            case PHASES.END:\n              setPlayer(null);\n              setTarget(null);\n              break;\n            case PHASES.LOAD:\n              if (gameSettings){\n                setTargetFromDate(gameSettings.beginningTime);\n              }\n              break;\n            case PHASES.RUNNING:\n              if (gameSettings){\n                setTargetFromDate(gameSettings.duration);\n              }\n              break;\n          } \n        })\n\n        if (!players){\n          socket.emit(\"/givePlayers\"); \n        }\n    \n        socket.on(\"/players\", (newplayers)=>{\n          setPlayers(newplayers);\n        })\n      }\n\n      return ()=>{\n        // clean up our listeners here\n        if (socket){\n          socket.off(\"/phase\");\n          socket.off(\"/players\");\n          setListeners(false);\n        }\n      }\n    }, [listeners, setListeners, socket, gameSettings])\n\n    const go = ()=>{\n        setStart(true);\n        handle.enter();\n    }\n\n    const content = ()=>{\n      switch(phase){\n        case PHASES.LOAD : \n        case PHASES.END :\n          return <LoaderScreen player={player} players={players} socket={socket} setPlayer={setPlayer} target={target} />\n        case PHASES.RUNNING : \n          return <Spectrum \n                      socket={socket} \n                      player={player} \n                      players={players} \n                      scoreUpdate={gameSettings.scoreUpdate} \n                      />;\n      }\n    }\n\n    if (!theme || !client || !gameSettings || !players){\n        return null;\n    }\n\n    return <div>\n      {start?null:<button onClick={go}>LOAD</button>}\n\n      <FullScreen handle={handle}>\n        <Row>\n          <Col xs={12} sm={12} md={gamewidth}>\n            <theme.Empty style={{padding: \"0\", margin: \"0\"}}>\n              <div style={{width: \"100%\", height: \"100vh\"}}> \n                {(gameSettings)?start?content():content() : null}\n                </div>\n                <div>\n                  <Score socket={socket} />\n                </div>\n            </theme.Empty>\n          </Col>\n          <Col xs={12} md={12-gamewidth} style={{background: \"black\", color: \"white\", borderLeft: \"solid 2px white\"}}>\n            <Controller phase={phase} phases={PHASES} target={target} player={player} />\n          </Col>\n        </Row>\n      </FullScreen>\n    </div>\n}\n\nexport default Game;\n\n\n","import Theme from '../theme'\n\n\nclass BuilderTheme extends Theme {\n    constructor(){\n      super()\n      this.font = \"Fira Code\"\n      this.sizes.normal = \"1.2em\"\n    }\n  \n    get defaultFont(){\n      return `${super.defaultFont}font-weight: 400;`\n    }\n  \n    get Title(){\n      return this.styled(super.Title)` font-weight: bold;`\n    }\n  }\n  \n  \n\n  export default BuilderTheme;","import React, {useState, useEffect, useRef} from 'react';\nimport { Grid, Col, Row} from '../theme'\nimport { useSelector } from \"react-redux\";\nimport Nav from '../components/nav'\n\nimport BlockContent from '@sanity/block-content-to-react';\nimport { NavLink } from 'react-router-dom';\nimport Moment from 'react-moment';\n\n\nconst Home = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    const news = useSelector(state => state.data.news);\n    const events = useSelector(state=>state.data.events)\n    const faqs = useSelector(state=>state.data.faqs)\n    const newsref = useRef(null);\n    \n    if (!theme){\n        return null;\n    } else {\n\n      const getEvents = (events)=>events.map(({title, description, available, moment})=><div key={title}>\n      <theme.SubTitle>\n        <Moment format=\"DD/MM\">{moment}</Moment> &nbsp;&nbsp; {title}\n      </theme.SubTitle>\n      <theme.Text>\n          <BlockContent blocks={description} />\n      </theme.Text>\n      <theme.Text>\n          <i>\n            Available places: {available}\n          </i>\n      </theme.Text>\n      <br/>                  <br/>                  <br/>\n    </div>)\n        \n  \n    return <Row align=\"center\">\n      <Col xs={12}>\n      <Nav />\n      </Col>\n        \n        \n      <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={newsref}>\n                    NEWS\n                </theme.Title>\n                <br/>\n\n                {news?\n\n                news.map(({title, description, images})=><>\n                  <theme.SubTitle key={title}>\n                    {title}\n                  </theme.SubTitle>\n                  <theme.Text>\n                      <BlockContent blocks={description} />\n                  </theme.Text>\n                  {(images && images.length)?\n                  images.map(({title, description, image})=><>\n                      <theme.Text key={title}>\n                        <b>\n                        {title}\n                        </b>\n                      </theme.Text>\n                      <img src={image} alt={title} style={{width: \"100%\"}} />\n                      <theme.Text>\n                        <i>\n                        <BlockContent blocks={description} />\n                        </i>\n                      </theme.Text>\n                  </>)\n                  : null}\n                  <br/>\n                </>)\n                \n                : <theme.Text>L O A D I N G</theme.Text>}\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title >\n                    Frequently Asked Questions\n                </theme.Title>\n                <br/>\n\n                {faqs?\n                  faqs.map(({title, description})=><theme.Text key={title}>\n                    <b>\n                      {title}\n                    </b> <br/>\n                    <BlockContent blocks={description} />\n                  </theme.Text>)\n                : <theme.Text>L O A D I N G</theme.Text>}\n\n                <br/>\n                             \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title >\n                    EVENTS\n                </theme.Title>\n                <br/>\n\n                {events?\n                  getEvents(events.filter((e)=>{\n                    const today = new Date()\n                    const yesterday = new Date(today)\n                    yesterday.setDate(yesterday.getDate() - 1)\n                    return new Date(e.moment) >= yesterday;\n                  }))                \n                : <theme.Text>L O A D I N G</theme.Text>}\n\n                <br/>\n                <theme.Title >\n                    PAST EVENTS\n                </theme.Title>\n                <br/>\n\n\n                {events?\n                  getEvents(events.filter((e)=>{\n                    const today = new Date()\n                    const yesterday = new Date(today)\n                    yesterday.setDate(yesterday.getDate() - 1)\n                    return new Date(e.moment) < yesterday;\n                  }))                \n                : null}                \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n\n        \n\n        \n\n      </Row>\n      \n    \n    }\n\n    \n  }\n\nexport default Home;","import React, {useEffect} from 'react';\nimport Theme, {OverviewPage} from './theme'\nimport { Provider } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store\";\nimport { createBrowserHistory } from 'history';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ACTIONS as DATA_ACTIONS } from \"./reducers/DataReducer\"\nimport sanityclient from './client';\nimport Server from './components/server'\n\n\nimport { Grid, Col, Row} from './theme'\nimport Game from './components/game'\n\n\nimport './assets/fonts/'\nimport BuilderTheme from './services/Buildertheme'\nimport Home from './components/Home'\n\nconst DataHelper = () => {\n  const data = useSelector(state => state.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!data.client && dispatch){\n      const cli = sanityclient(dispatch);\n      dispatch({ type: DATA_ACTIONS.SET_CLIENT, client: cli});\n    } \n\n    if (!data.theme && dispatch ){\n      const builder = new BuilderTheme();\n      dispatch({type: DATA_ACTIONS.SET_THEME, theme: new BuilderTheme()})\n      // dispatch({type: DATA_ACTIONS.SET_THEMES, themes: [new BuilderTheme()]})\n    }\n  })\n  return (\n    null\n  )\n}\n\n\nconst App =()=>{\n  const history = createBrowserHistory()\n  const theme = new BuilderTheme();\n\n  return (\n    <Provider store={Store}>\n    <DataHelper />\n      <Router history={history}>\n\n        <Grid style={{width: \"100%\", minWidth: \"100%\", margin: 0, padding: 0}}>\n\n        \n\n        \n        \n      \n        <span>\n       \n            <Switch>\n              <Route exact path=\"/\" component={Game} />\n              {/* <Route exact path=\"/overview\" component={OverviewPage} />\n              <Route exact path=\"/server\" component={Server} /> */}\n              <Route exact path=\"/gamelegacy\" component={Game} />\n              <Route component={Home}/>\n            </Switch>\n        </span>\n\n        </Grid>\n      </Router>\n  </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// import './assets/fonts/OCP'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4ef8c6e8.svg\";"],"sourceRoot":""}